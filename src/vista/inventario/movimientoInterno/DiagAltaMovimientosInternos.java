/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.inventario.movimientoInterno;

import entidades.Sucursal;
import vista.articulos.*;
import entidades.articulo.Articulo;
import entidades.articulo.PrecioArticulo;
import entidades.inventario.MovimientoInterno;
import entidades.usuario.Usuario;
import facade.MovimientoInternoFacade;
import facade.PrecioArticuloFacade;
import includes.Comunes;
import includes.Impresora;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vista.sucursal.DiagBuscarSucursal;

/**
 *
 * @author hugo
 */
public class DiagAltaMovimientosInternos extends javax.swing.JDialog {

    /**
     * Creates new form DiagClienteGenerico
     */
    private Sucursal sucursal;
    private Sucursal sucursalDestino;
    private Usuario usuario;
    private PrecioArticulo precioComun;   
    private ArrayList<MovimientoInterno> datos;
    private String moviSeleccionado;
    private MovimientoInterno nuevoMovimiento;   
    boolean loteAsignado = false; // Uso para saber si ya tiene lote asignado
    int numLote = 0; // Tomo el ultimo numero de lote y lo mantengo hasta cerrar
    int num = 0; // Lo uso para calcular el siguiente numero de movimiento
    // ya que tengo que verificar si esta grabado en la bd o todavia sigue en el
    // array sin ser persistido
    
    // Defino aqui el modelo de la tabla para que lo cree una sola vez
    DefaultTableModel modeloTabla = new DefaultTableModel()
    {@Override
        public boolean isCellEditable (int fila, int columna){
            return false;
        }
    };
    

    public DiagAltaMovimientosInternos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();        
        inicializarComponentes();
    }
    
    public DiagAltaMovimientosInternos(java.awt.Frame parent, boolean modal, Sucursal sucursal, Usuario usuario) {
        super(parent, modal);
        initComponents();
        this.sucursal = sucursal;
        this.usuario = usuario;
        datos = new ArrayList<>();
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgCodDesc = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfNumero = new javax.swing.JTextField();
        dpFecha = new org.jdesktop.swingx.JXDatePicker();
        cmbTipoMovimiento = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        tfNumeroOrigen = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfCodigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfArticulo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfPrecio = new javax.swing.JTextField();
        jbSeleccionarArticulo = new javax.swing.JButton();
        tfCantidad = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();
        btnEliminar = new javax.swing.JButton();
        btnEnviar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        tfTotalEgresos = new javax.swing.JTextField();
        tfTotalIngresos = new javax.swing.JTextField();
        tfTotal = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        tfSucursal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jbSeleccionarSucursal = new javax.swing.JButton();

        jScrollPane1.setViewportView(jTextPane1);

        jToggleButton1.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jToggleButton1.text")); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jPanel3.border.title"))); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jLabel5.text")); // NOI18N

        jLabel6.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jLabel6.text")); // NOI18N

        jLabel7.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jLabel7.text")); // NOI18N

        tfNumero.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.tfNumero.text")); // NOI18N
        tfNumero.setEnabled(false);

        dpFecha.setFormats("dd/MM/yyyy");
        dpFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpFechaActionPerformed(evt);
            }
        });

        cmbTipoMovimiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbTipoMovimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoMovimientoActionPerformed(evt);
            }
        });

        jLabel9.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jLabel9.text")); // NOI18N

        tfNumeroOrigen.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.tfNumeroOrigen.text")); // NOI18N
        tfNumeroOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNumeroOrigenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(17, 17, 17)
                        .addComponent(tfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(cmbTipoMovimiento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dpFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfNumeroOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(tfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dpFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cmbTipoMovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(tfNumeroOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(194, 194, 194))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jPanel2.border.title"))); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jLabel2.text")); // NOI18N

        tfCodigo.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.tfCodigo.text")); // NOI18N
        tfCodigo.setEnabled(false);

        jLabel3.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jLabel3.text")); // NOI18N

        tfArticulo.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.tfArticulo.text")); // NOI18N
        tfArticulo.setEnabled(false);

        jLabel4.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jLabel4.text")); // NOI18N

        tfPrecio.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.tfPrecio.text")); // NOI18N
        tfPrecio.setEnabled(false);

        jbSeleccionarArticulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar2.png"))); // NOI18N
        jbSeleccionarArticulo.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jbSeleccionarArticulo.text")); // NOI18N
        jbSeleccionarArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSeleccionarArticuloActionPerformed(evt);
            }
        });

        tfCantidad.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.tfCantidad.text")); // NOI18N

        jLabel8.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jLabel8.text")); // NOI18N

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/aceptar.png"))); // NOI18N
        btnAceptar.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.btnAceptar.text")); // NOI18N
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/close.png"))); // NOI18N
        btnCancelar.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.btnCancelar.text")); // NOI18N
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(tfPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfCantidad)
                                .addGap(4, 4, 4))
                            .addComponent(jbSeleccionarArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(213, 213, 213))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106)
                        .addComponent(jLabel3)
                        .addGap(20, 20, 20)
                        .addComponent(tfArticulo)
                        .addGap(80, 80, 80))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jbSeleccionarArticulo)
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(tfArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(tfPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAceptar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jbSeleccionarArticulo.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jbSeleccionarArticulo.AccessibleContext.accessibleName")); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jPanel4.border.title"))); // NOI18N

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tblDatos);

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/delete.png"))); // NOI18N
        btnEliminar.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.btnEliminar.text")); // NOI18N
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEnviar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save.png"))); // NOI18N
        btnEnviar.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.btnEnviar.text")); // NOI18N
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        jLabel10.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jLabel10.text")); // NOI18N

        tfTotalEgresos.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        tfTotalEgresos.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.tfTotalEgresos.text")); // NOI18N
        tfTotalEgresos.setDisabledTextColor(new java.awt.Color(250, 9, 9));

        tfTotalIngresos.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        tfTotalIngresos.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.tfTotalIngresos.text")); // NOI18N
        tfTotalIngresos.setDisabledTextColor(new java.awt.Color(24, 151, 8));

        tfTotal.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        tfTotal.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.tfTotal.text")); // NOI18N
        tfTotal.setDisabledTextColor(new java.awt.Color(10, 32, 238));

        jLabel11.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jLabel11.text")); // NOI18N

        jLabel12.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jLabel12.text")); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTotalEgresos, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTotalIngresos, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEnviar))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTotalEgresos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(tfTotalIngresos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jPanel5.border.title"))); // NOI18N

        tfSucursal.setEnabled(false);

        jLabel1.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jLabel1.text")); // NOI18N

        jbSeleccionarSucursal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar2.png"))); // NOI18N
        jbSeleccionarSucursal.setText(org.openide.util.NbBundle.getMessage(DiagAltaMovimientosInternos.class, "DiagAltaMovimientosInternos.jbSeleccionarSucursal.text")); // NOI18N
        jbSeleccionarSucursal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSeleccionarSucursalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSeleccionarSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jbSeleccionarSucursal))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSeleccionarArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSeleccionarArticuloActionPerformed
        seleccionarArticulo();
    }//GEN-LAST:event_jbSeleccionarArticuloActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        validarCampos();
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        guardarMovimientoInterno();
    }//GEN-LAST:event_btnEnviarActionPerformed

    private void tfNumeroOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNumeroOrigenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNumeroOrigenActionPerformed

    private void cmbTipoMovimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoMovimientoActionPerformed
        habilitarCampo();
    }//GEN-LAST:event_cmbTipoMovimientoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminarMovimiento();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jbSeleccionarSucursalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSeleccionarSucursalActionPerformed
        deshabilitarFecha();
        seleccionarSucursal();
    }//GEN-LAST:event_jbSeleccionarSucursalActionPerformed

    private void dpFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpFechaActionPerformed
        deshabilitarFecha();
    }//GEN-LAST:event_dpFechaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiagAltaMovimientosInternos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiagAltaMovimientosInternos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiagAltaMovimientosInternos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiagAltaMovimientosInternos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiagAltaMovimientosInternos dialog = new DiagAltaMovimientosInternos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgCodDesc;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JComboBox<String> cmbTipoMovimiento;
    private org.jdesktop.swingx.JXDatePicker dpFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JButton jbSeleccionarArticulo;
    private javax.swing.JButton jbSeleccionarSucursal;
    private javax.swing.JTable tblDatos;
    private javax.swing.JTextField tfArticulo;
    private javax.swing.JTextField tfCantidad;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JTextField tfNumero;
    private javax.swing.JTextField tfNumeroOrigen;
    private javax.swing.JTextField tfPrecio;
    private javax.swing.JTextField tfSucursal;
    private javax.swing.JTextField tfTotal;
    private javax.swing.JTextField tfTotalEgresos;
    private javax.swing.JTextField tfTotalIngresos;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
        this.setTitle("Alta de Movimientos Internos");
        tfNumeroOrigen.setEnabled(false);  
        btnEnviar.setEnabled(false);
        jbSeleccionarSucursal.setEnabled(false);
        cargarComboTipoMovimiento();
        cargarTablaEncabezados();
       //System.out.println("valor del lote" + String.valueOf(MovimientoInternoFacade.getInstance().getUltimoNumeroLote()));
        //tfNumero.setText(String.valueOf(MovimientoInternoFacade.getInstance().getUltimoNumeroLote()+ 1));
        tfTotalEgresos.setEnabled(false);
        tfTotalIngresos.setEnabled(false);
        tfTotal.setEnabled(false);
    }    
    
    private void cargarComboTipoMovimiento() {
        //List<TipoDeMovimiento> listaTipoMovimiento = TipoMovimientoFacade.getInstance().getTodos(); 
        String [] listaTipoMovimiento = {"ING","EGRE","DEC","TRE","TRS"};

        DefaultComboBoxModel modeloCombo = new DefaultComboBoxModel();
        modeloCombo.addElement("seleccionar...");
        for(String tipoMovimiento : listaTipoMovimiento){
            if(!tipoMovimiento.equals("ING")){
                modeloCombo.addElement(tipoMovimiento);
            }
        }
        cmbTipoMovimiento.setModel(modeloCombo);
    }
    
    private void seleccionarSucursal() {
        DiagBuscarSucursal diagSucursalDestino = new DiagBuscarSucursal(null, true);
        diagSucursalDestino.setLocation(Comunes.centrarDialog(diagSucursalDestino));
        diagSucursalDestino.setVisible(true);
        sucursalDestino = diagSucursalDestino.getSucursalBuscada();
        if(sucursalDestino != null){
            if(sucursalDestino.equals(sucursal)){
                JOptionPane.showMessageDialog(null, "La sucursal destino es igual "
                        + "a la sucursal origen, por favor eliga otra");
            }else{
                tfSucursal.setText(sucursalDestino.getNombre());
                jbSeleccionarSucursal.setEnabled(false);
            }
        }        
    }

    private void seleccionarArticulo() {
        DiagBuscarArticulo articuloSeleccionado = new DiagBuscarArticulo(null,true);
        articuloSeleccionado.setLocation(Comunes.centrarDialog(articuloSeleccionado));
        articuloSeleccionado.setVisible(true);
        articuloSeleccionado.getArticulo();
        // Verifico para que no me de nullpointer
        if(articuloSeleccionado.getArticulo() != null){
            tfArticulo.setText(articuloSeleccionado.getArticulo().getDescripcion());
            tfCodigo.setText(articuloSeleccionado.getArticulo().getCodigoBarra());
            cargarPrecioArticulo(articuloSeleccionado.getArticulo());
        }
    }
    
    private void cargarPrecioArticulo(Articulo articulo) {
        precioComun = new PrecioArticulo();
        precioComun = PrecioArticuloFacade.getInstance().getComun(articulo, sucursal);
        tfPrecio.setText(precioComun.getPrecio().toString());
    }  
    
    private void habilitarCampo() {
        limpiarCampos();
        dpFecha.requestFocus();
        String moviSeleccionado =  cmbTipoMovimiento.getSelectedItem().toString();
        if(moviSeleccionado.equals("TRE")){
            tfNumeroOrigen.setEnabled(true);
        }else
        {
            tfNumeroOrigen.setEnabled(false);
        }
        
        if(moviSeleccionado.equals("EGRE")){
            jbSeleccionarSucursal.setEnabled(true);
        }else
        {
            jbSeleccionarSucursal.setEnabled(false);
        }
        cmbTipoMovimiento.setEnabled(false);
    }
    
    private void validarCampos() {
        boolean vacio;
        
        String moviSele =  cmbTipoMovimiento.getSelectedItem().toString();        
        Date fechaHoy = new Date();
        
        vacio = tfCodigo.getText().isEmpty();
        vacio = tfCantidad.getText().isEmpty();        
                
        if(tfSucursal.getText().equals("")&&moviSele.equals("EGRE")){
            vacio = true;
        }
        
        if(dpFecha.getDate().compareTo(fechaHoy) == 1){
            JOptionPane.showMessageDialog(null, "No puede cargar fechas posterior al dia de hoy");
            vacio = true;
            dpFecha.setEnabled(true);
        }        
        
        if (moviSele.equals("seleccionar...")){   
            JOptionPane.showMessageDialog(null, "Debe elegir un tipo de movimiento");        
            vacio = true;
        }else{
            moviSeleccionado =  cmbTipoMovimiento.getSelectedItem().toString();   
            if (moviSeleccionado.equals("TRE")){   
                vacio = tfNumeroOrigen.getText().isEmpty(); 
            }            
        }       
        
        if(vacio){
            JOptionPane.showMessageDialog(null, "Debe llenar los campos obligatorios");
        }else{
            agregarMovimiento();            
        }        
    }

    private void agregarMovimiento() {               
        moviSeleccionado = cmbTipoMovimiento.getSelectedItem().toString();          
        
        nuevoMovimiento = new MovimientoInterno();       
            
        nuevoMovimiento.setFecha(dpFecha.getDate());        
        nuevoMovimiento.setSucursal(this.sucursal);
        nuevoMovimiento.setUsuarioEnvia(usuario);
        nuevoMovimiento.setCantidad(new BigDecimal(tfCantidad.getText()));
        nuevoMovimiento.setMonto(new BigDecimal(tfPrecio.getText()));
        nuevoMovimiento.setTipoDeMovimiento(moviSeleccionado);
        nuevoMovimiento.setArticuloCodigo(tfCodigo.getText());
        nuevoMovimiento.setArticuloDescripcion(tfArticulo.getText());        
        nuevoMovimiento.setAnulado(false);          
        
        // Si el movimiento es un egreso, toma la sucursal elegida, sino es la
        // propia sucursal
        if(moviSeleccionado.equals("EGRE")){
            nuevoMovimiento.setSucursalDestino(sucursalDestino);   
            nuevoMovimiento.setEstado("abierto");
        }else{
            nuevoMovimiento.setSucursalDestino(this.sucursal);
            nuevoMovimiento.setEstado("-");
        }
        
        if (moviSeleccionado.equals("TRE")){
            nuevoMovimiento.setIdTransformado(Long.parseLong(tfNumeroOrigen.getText()));
        }else{
            nuevoMovimiento.setIdTransformado(Long.parseLong("0"));
        }        
        
        // Verifico si ya tiene número de lote asignado, si lo tiene lo recupero
        // y sumo uno mas al numero de movimiento, si no tiene lo obtengo y 
        // cambio la variable boleana
 /*       if(loteAsignado){
            numLote = numLote;  
            
        }else{ */
            //numLote = MovimientoInternoFacade.getInstance().getUltimoNumeroLote()+ 1;
           // num = MovimientoInternoFacade.getInstance().getUltimoNumero()+ 1;
            loteAsignado = true;
  //      }
        //nuevoMovimiento.setNumeroLote(numLote);
        num++;
        nuevoMovimiento.setNumero(num);       
        
        datos=agregarFila(nuevoMovimiento);    
        
        calcularTotales(datos);       
        
        limpiarTabla();
        cargarTabla();
        // Verifico que la tabla tenga registros para poder habilitar el botón
        // para realizar el envío        
        if (tblDatos.getRowCount() > 0){
            btnEnviar.setEnabled(true);
        }else{
            btnEnviar.setEnabled(false);
        }
        // Seteo los campos a vacío
        tfCantidad.setText("");
        tfCodigo.setText("");
        tfArticulo.setText("");
        tfPrecio.setText("");
        
    }
    
    private void eliminarMovimiento() {
        DefaultTableModel modeloTabla = (DefaultTableModel) tblDatos.getModel();
        
        datos=quitarFila(tblDatos.getSelectedRow());  
        calcularTotales(datos);
        modeloTabla.removeRow(tblDatos.getSelectedRow());
        limpiarTabla();            
        cargarTabla();
        if (tblDatos.getRowCount() > 0){
            btnEnviar.setEnabled(true);
        }else{
            btnEnviar.setEnabled(false);
        }        
    }
    
    public ArrayList<MovimientoInterno> agregarFila(MovimientoInterno movimiento){
        int numeroFilas = datos.size();
        datos.add(movimiento);
        modeloTabla.fireTableRowsInserted(numeroFilas, numeroFilas+1);
        return datos;
    }
    
    public ArrayList<MovimientoInterno> quitarFila(int fila){                
        datos.remove(fila);           
        return datos;
    }
    
    private void cargarTablaEncabezados() {
        modeloTabla.addColumn("Núm Movi");  
        modeloTabla.addColumn("Tipo Movi");  
        modeloTabla.addColumn("Código");
        modeloTabla.addColumn("Articulo");        
        modeloTabla.addColumn("Cantidad");
        modeloTabla.addColumn("Precio"); 
        modeloTabla.addColumn("Total");  
        tblDatos.setModel(modeloTabla);
    }
    
    public void limpiarTabla(){
        for(int j = tblDatos.getRowCount()-1; j >= 0; j--){  
            modeloTabla.removeRow(j);
        }
    }
    
    public void cargarTabla(){
        Object[] fila = new Object[7];        
        for(int i = 0; i < datos.size(); i++){
            modeloTabla.isCellEditable(i, 0);
            modeloTabla.isCellEditable(i, 1);
            modeloTabla.isCellEditable(i, 2);
            modeloTabla.isCellEditable(i, 3);
            modeloTabla.isCellEditable(i, 4);
            modeloTabla.isCellEditable(i, 5);
            modeloTabla.isCellEditable(i, 6);
            
            fila[0] = datos.get(i).getNumero(); 
            fila[1] = datos.get(i).getTipoDeMovimiento(); 
            fila[2] = datos.get(i).getArticuloCodigo();  
            fila[3] = datos.get(i).getArticuloDescripcion(); 
            fila[4] = datos.get(i).getCantidad();
            fila[5] = datos.get(i).getMonto();              
            fila[6] = datos.get(i).getCantidad().
                    multiply(datos.get(i).getMonto()).setScale(2,BigDecimal.ROUND_CEILING);      
            
            modeloTabla.addRow(fila);                        
        }            
        tblDatos.setModel(modeloTabla);
    }        
    
    private void guardarMovimientoInterno() {        
        int reply = JOptionPane.showConfirmDialog(null,
                "¿Desea confirmar el envio?", "Alta Movimientos Internos",
                JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            try {
                // Creo una lista movimientos a imprimir que solo son los egresos
                // a partir de la lista original
                numLote = MovimientoInternoFacade.getInstance().getUltimoNumeroLote()+ 1;
                List<MovimientoInterno> moviImp = new ArrayList<>();                
               
                for(int i = 0; i < datos.size(); i++){
                    moviImp.add(datos.get(i));       
                    if(datos.get(i).getTipoDeMovimiento().equals("EGRE")){                        
                        
                        MovimientoInterno moviIngreso = new MovimientoInterno();
                        
                        moviIngreso.setNumero(datos.get(i).getNumero());
                        moviIngreso.setFecha(datos.get(i).getFecha());        
                        moviIngreso.setSucursal(datos.get(i).getSucursal());
                        moviIngreso.setSucursalDestino(datos.get(i).getSucursalDestino());
                        moviIngreso.setUsuarioEnvia(datos.get(i).getUsuarioEnvia());
                        moviIngreso.setCantidad(datos.get(i).getCantidad());
                        moviIngreso.setMonto(datos.get(i).getMonto());
                        moviIngreso.setTipoDeMovimiento("ING");
                        moviIngreso.setArticuloCodigo(datos.get(i).getArticuloCodigo());
                        moviIngreso.setArticuloDescripcion(datos.get(i).getArticuloDescripcion());        
                        moviIngreso.setAnulado(datos.get(i).isAnulado());       
                        moviIngreso.setNumeroLote(numLote);
                        moviIngreso.setEstado(datos.get(i).getEstado());
                        
                        MovimientoInternoFacade.getInstance().alta(moviIngreso);
                    }
                    datos.get(i).setNumeroLote(numLote);
                    MovimientoInternoFacade.getInstance().alta(datos.get(i));
                }
                JOptionPane.showMessageDialog(null, "Envío realizado exitosamente");
                
                /***** IMPRESION DEL COMPROBANTE *****/                
                try {
                    new Impresora().imprimir(moviImp,"ORIGINAL");
                    new Impresora().imprimir(moviImp,"COPIA");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error imprimiendo, compruebe impresora!");
                }
                
                this.dispose();
            } catch (java.lang.NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "No se han guardado los cambios \n"
                        + "Es posible que haya ingresado un valor incorrecto",
                        "Error Guardando", JOptionPane.ERROR_MESSAGE);
            }            
        } else {
            JOptionPane.showMessageDialog(null, "No se han guardado los cambios");
            this.dispose();
        }        
    }    
    
    private void calcularTotales(ArrayList<MovimientoInterno> datos) {
        BigDecimal totalIngresos = new BigDecimal(0).setScale(2,BigDecimal.ROUND_CEILING);
        BigDecimal totalEgresos = new BigDecimal(0).setScale(2,BigDecimal.ROUND_CEILING);
        BigDecimal total = new BigDecimal(0).setScale(2,BigDecimal.ROUND_CEILING);
        
        for(int i = 0; i < datos.size(); i++){
            if(datos.get(i).getTipoDeMovimiento().equals("EGRE")){
                totalEgresos = totalEgresos.add(datos.get(i).getMonto().
                        multiply(datos.get(i).getCantidad()));
            }

            if(datos.get(i).getTipoDeMovimiento().equals("DEC")){
                totalEgresos = totalEgresos.add(datos.get(i).getMonto().
                        multiply(datos.get(i).getCantidad()));
            }

            if(datos.get(i).getTipoDeMovimiento().equals("TRS")){
                totalEgresos = totalEgresos.add(datos.get(i).getMonto().
                        multiply(datos.get(i).getCantidad()));
            }

            if(datos.get(i).getTipoDeMovimiento().equals("TRE")){
                totalIngresos = totalIngresos.add(datos.get(i).getMonto().
                        multiply(datos.get(i).getCantidad()));
            }

            if(datos.get(i).getTipoDeMovimiento().equals("ING")){
                totalIngresos = totalIngresos.add(datos.get(i).getMonto().
                        multiply(datos.get(i).getCantidad()));
            }
        }
        total = totalIngresos.subtract(totalEgresos);
        
        tfTotalEgresos.setText(String.valueOf(totalEgresos));
        tfTotalIngresos.setText(String.valueOf(totalIngresos));
        tfTotal.setText(String.valueOf(total));
    }

    private void limpiarCampos() {
        sucursalDestino=null;
        tfSucursal.setText("");
        tfNumeroOrigen.setText("");
        tfArticulo.setText("");
        tfCodigo.setText("");
        tfCantidad.setText("");
        tfPrecio.setText("");
                    
    }

    private void deshabilitarFecha() {
        dpFecha.setEnabled(false);
    }
}