/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.inventario.movimientoInterno;

import entidades.Sucursal;
import entidades.inventario.MovimientoInterno;
import entidades.usuario.Usuario;
import facade.MovimientoInternoFacade;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author wbivanco
 */
public class DiagRecepcionMovimientoInterno extends javax.swing.JDialog {

    
    private List<MovimientoInterno> datos;
    SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
    private Usuario usuario;
    private Sucursal sucursal;
    int numeroLote;
    
    // Defino aqui el modelo de la tabla para que lo cree una sola vez
    DefaultTableModel modeloTabla = new DefaultTableModel()
    {@Override
        public boolean isCellEditable (int fila, int columna){
            return false;
        }
    };    
    
            
    /**
     * Creates new form DiagRecepcionMovimientoInterno
     */
    public DiagRecepcionMovimientoInterno(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        iniciarComponentes();
    }
    
    public DiagRecepcionMovimientoInterno(java.awt.Frame parent, boolean modal, Usuario usuario,Sucursal sucursal, int numeroLote) {
        super(parent, modal);
        initComponents();        
        this.numeroLote = numeroLote;
        this.usuario = usuario;
        this.sucursal = sucursal;
        System.out.println("usuario" + usuario);
        //datos = new ArrayList<>();
        iniciarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfLote = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfSucursalOrigen = new javax.swing.JTextField();
        dpFecha = new org.jdesktop.swingx.JXDatePicker();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfSucursalDestino = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        tfTotalIngreso = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiagRecepcionMovimientoInterno.class, "DiagRecepcionMovimientoInterno.jPanel1.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(DiagRecepcionMovimientoInterno.class, "DiagRecepcionMovimientoInterno.jLabel1.text")); // NOI18N

        tfLote.setText(org.openide.util.NbBundle.getMessage(DiagRecepcionMovimientoInterno.class, "DiagRecepcionMovimientoInterno.tfLote.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(DiagRecepcionMovimientoInterno.class, "DiagRecepcionMovimientoInterno.jLabel2.text")); // NOI18N

        tfSucursalOrigen.setText(org.openide.util.NbBundle.getMessage(DiagRecepcionMovimientoInterno.class, "DiagRecepcionMovimientoInterno.tfSucursalOrigen.text")); // NOI18N

        dpFecha.setFormats("dd/MM/yyyy");

        jLabel3.setText(org.openide.util.NbBundle.getMessage(DiagRecepcionMovimientoInterno.class, "DiagRecepcionMovimientoInterno.jLabel3.text")); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getMessage(DiagRecepcionMovimientoInterno.class, "DiagRecepcionMovimientoInterno.jLabel4.text")); // NOI18N

        tfSucursalDestino.setText(org.openide.util.NbBundle.getMessage(DiagRecepcionMovimientoInterno.class, "DiagRecepcionMovimientoInterno.tfSucursalDestino.text")); // NOI18N

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/aceptar.png"))); // NOI18N
        jButton1.setText(org.openide.util.NbBundle.getMessage(DiagRecepcionMovimientoInterno.class, "DiagRecepcionMovimientoInterno.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/close.png"))); // NOI18N
        jButton2.setText(org.openide.util.NbBundle.getMessage(DiagRecepcionMovimientoInterno.class, "DiagRecepcionMovimientoInterno.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfLote, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dpFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(tfSucursalOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfSucursalDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                .addGap(49, 49, 49))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tfLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(dpFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(tfSucursalOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(tfSucursalDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiagRecepcionMovimientoInterno.class, "DiagRecepcionMovimientoInterno.jPanel2.border.title"))); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(DiagRecepcionMovimientoInterno.class, "DiagRecepcionMovimientoInterno.jLabel5.text")); // NOI18N

        tfTotalIngreso.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        tfTotalIngreso.setText(org.openide.util.NbBundle.getMessage(DiagRecepcionMovimientoInterno.class, "DiagRecepcionMovimientoInterno.tfTotalIngreso.text")); // NOI18N
        tfTotalIngreso.setDisabledTextColor(new java.awt.Color(24, 151, 8));

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblDatos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTotalIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTotalIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        guardarIngreso();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiagRecepcionMovimientoInterno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiagRecepcionMovimientoInterno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiagRecepcionMovimientoInterno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiagRecepcionMovimientoInterno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiagRecepcionMovimientoInterno dialog = new DiagRecepcionMovimientoInterno(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXDatePicker dpFecha;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDatos;
    private javax.swing.JTextField tfLote;
    private javax.swing.JTextField tfSucursalDestino;
    private javax.swing.JTextField tfSucursalOrigen;
    private javax.swing.JTextField tfTotalIngreso;
    // End of variables declaration//GEN-END:variables

    private void iniciarComponentes() {
        this.setTitle("Ingreso de Movimientos Internos");
        tfLote.setEnabled(false);
        tfSucursalDestino.setEnabled(false);
        tfSucursalOrigen.setEnabled(false);
        tfTotalIngreso.setEnabled(false);
        cargarTablaEncabezados();        
        traerDatos();       
    }
    
    private void traerDatos() {
        limpiarTabla();
        
        datos = facade.MovimientoInternoFacade.
                getInstance().buscarPorNumeroLote(this.numeroLote);    
        
        cargarTabla();
        calcularTotales();           
    }

    private void cargarTablaEncabezados() {
        modeloTabla.addColumn("Núm Movi");  
        modeloTabla.addColumn("Tipo Movi");  
        modeloTabla.addColumn("Código");
        modeloTabla.addColumn("Articulo");        
        modeloTabla.addColumn("Cantidad");
        modeloTabla.addColumn("Precio"); 
        modeloTabla.addColumn("Total");  
        tblDatos.setModel(modeloTabla);
    }

    private void cargarTabla() {
        Object[] fila = new Object[7];        
        for(int i = 0; i < datos.size(); i++){
            if(datos.get(i).getTipoDeMovimiento().equals("ING")){
                tfLote.setText(String.valueOf(datos.get(i).getNumeroLote()));
                tfSucursalOrigen.setText(datos.get(i).getSucursal().getNombre());
                tfSucursalDestino.setText(datos.get(i).getSucursalDestino().getNombre());
                dpFecha.setDate(datos.get(i).getFecha());

                modeloTabla.isCellEditable(i, 0);
                modeloTabla.isCellEditable(i, 1);
                modeloTabla.isCellEditable(i, 2);
                modeloTabla.isCellEditable(i, 3);
                modeloTabla.isCellEditable(i, 4);
                modeloTabla.isCellEditable(i, 5);
                modeloTabla.isCellEditable(i, 6);

                fila[0] = datos.get(i).getNumero(); 
                fila[1] = datos.get(i).getTipoDeMovimiento(); 
                fila[2] = datos.get(i).getArticuloCodigo();  
                fila[3] = datos.get(i).getArticuloDescripcion(); 
                fila[4] = datos.get(i).getCantidad();
                fila[5] = datos.get(i).getMonto();              
                fila[6] = datos.get(i).getCantidad().
                        multiply(datos.get(i).getMonto()).setScale(2,BigDecimal.ROUND_CEILING);      

                modeloTabla.addRow(fila);  
            }
        }            
        tblDatos.setModel(modeloTabla);
    }
    
    private void calcularTotales() {
        limpiarTotales(); 
        BigDecimal totalIngresos = new BigDecimal(0).setScale(2,BigDecimal.ROUND_CEILING);        
        
        for(int i = 0; i < datos.size(); i++){            
            if(datos.get(i).getTipoDeMovimiento().equals("ING")){
                totalIngresos = totalIngresos.add(datos.get(i).getMonto().
                        multiply(datos.get(i).getCantidad())).
                        setScale(2,BigDecimal.ROUND_CEILING);
            }
        }         
        
        tfTotalIngreso.setText(String.valueOf(totalIngresos));        
    }
    
    private void limpiarTabla() {         
        for(int j = tblDatos.getRowCount()-1; j >= 0; j--){  
            modeloTabla.removeRow(j);               
        }    
    }
     
    private void limpiarTotales() {        
        tfTotalIngreso.setText("");
    }

    private void guardarIngreso() {
        int reply = JOptionPane.showConfirmDialog(null,
                "¿Desea confirmar el envio?", "Alta Movimientos Internos",
                JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            try {
                for(int i = 0; i < datos.size(); i++){
                    datos.get(i).setUsuarioRecibe(usuario);
                    datos.get(i).setEstado("cerrado");
                    MovimientoInternoFacade.getInstance().modificar(datos.get(i),sucursal);
                }
               
                JOptionPane.showMessageDialog(null, "Envío realizado exitosamente");
                
                /***** IMPRESION DEL COMPROBANTE *****/                
                /*try {
                    new Impresora().imprimir(moviImp,"ORIGINAL");
                    //new Impresora().imprimir(moviImp,"COPIA");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error imprimiendo, compruebe impresora!");
                }*/
                
                this.dispose();
            } catch (java.lang.NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "No se han guardado los cambios \n"
                        + "Es posible que haya ingresado un valor incorrecto",
                        "Error Guardando", JOptionPane.ERROR_MESSAGE);
            }            
        } else {
            JOptionPane.showMessageDialog(null, "No se han guardado los cambios");
            this.dispose();
        }        
    }
    
}
