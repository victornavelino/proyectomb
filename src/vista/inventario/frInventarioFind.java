/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.inventario;

import entidades.Sucursal;
import entidades.inventario.Inventario;
import facade.InventarioFacade;
import facade.SucursalFacade;
import includes.Comunes;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mVera
 */
public class frInventarioFind extends javax.swing.JDialog {

    private List<Inventario> lstInventario;
    private Inventario inventarioSelect;
    private Sucursal sucursal;
    
    public frInventarioFind(java.awt.Frame parent, boolean modal, Sucursal sucursal) {
        super(parent, modal);
        this.setLocationRelativeTo(parent);
        this.sucursal = sucursal;

        initComponents();
        inicializar();
        this.setTitle("Buscar Inventario");
        jlInventario.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    public Inventario getInventarioSelect() {
        return inventarioSelect;
    }

    public void setInventarioSelect(Inventario inventarioSelect) {
        this.inventarioSelect = inventarioSelect;
    }

    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jbBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlInventario = new javax.swing.JList();
        jbSeleccionar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jdpFechaIni = new org.jdesktop.swingx.JXDatePicker();
        jdpFechaHasta = new org.jdesktop.swingx.JXDatePicker();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        jbSalir = new javax.swing.JButton();
        jcbSucursal = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jbBuscar.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar2.png"))); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jlInventario.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jScrollPane2.setViewportView(jlInventario);

        jbSeleccionar.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jbSeleccionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/accept.png"))); // NOI18N
        jbSeleccionar.setText("Seleccionar");
        jbSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSeleccionarActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(86, 112, 66));
        jLabel3.setFont(new java.awt.Font("Vrinda", 0, 24)); // NOI18N
        jLabel3.setText("   Buscar Inventario");
        jLabel3.setToolTipText("");
        jLabel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(86, 112, 66), 1, true));
        jLabel3.setOpaque(true);

        jdpFechaIni.setFormats("dd/MM/yyyy");

        jdpFechaHasta.setFormats("dd/MM/yyyy");

        label1.setText("Desde");

        label2.setText("Hasta");

        jbSalir.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/close.png"))); // NOI18N
        jbSalir.setLabel("Salir");
        jbSalir.setName(""); // NOI18N
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jcbSucursal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Sucursal");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jdpFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jdpFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(23, 23, 23)
                                .addComponent(jcbSucursal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbSeleccionar)
                        .addGap(131, 131, 131)
                        .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jbBuscar)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdpFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdpFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbSeleccionar)
                    .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        this.cargarLista();
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSeleccionarActionPerformed
        this.seleccionarInventario();
    }//GEN-LAST:event_jbSeleccionarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        this.salir();
    }//GEN-LAST:event_jbSalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frInventarioFind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frInventarioFind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frInventarioFind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frInventarioFind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frInventarioFind dialog = new frInventarioFind(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });*/
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JButton jbSeleccionar;
    private javax.swing.JComboBox jcbSucursal;
    private org.jdesktop.swingx.JXDatePicker jdpFechaHasta;
    private org.jdesktop.swingx.JXDatePicker jdpFechaIni;
    private javax.swing.JList jlInventario;
    private java.awt.Label label1;
    private java.awt.Label label2;
    // End of variables declaration//GEN-END:variables

    
    private void inicializar(){
        if (sucursal.getCodigo().equals("1")) {//SI ES LA CENTRAL, MOSTRAMOS TODAS LAS SUCURSALES

                Comunes.cargarJComboConBlancoPersonalizado(jcbSucursal, SucursalFacade.getInstance().getTodos(), "Todos");

        } else { //
                Comunes.cargarJCombo(jcbSucursal, SucursalFacade.getInstance().buscarPorNombre(sucursal.getNombre()));
        }
    }
    
    public void cargarLista(){
         try{
             lstInventario= this.cargarInventarios();
   
            // this.limpiarTabla();
             if(!lstInventario.isEmpty()){
                 DefaultListModel dlm = new DefaultListModel();

                 for(Inventario um : lstInventario){
                     Inventario ume = new Inventario(){

                         @Override
                         public String toString() {
                             return "{" + '}';
                         }
                         
                     };
                     dlm.addElement(um);
                 }//fin for
                 
                 jlInventario.setModel(dlm);
             }else{
                 throw new Exception("No se encontraron datos");
                 
             }
             
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage(), "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }//fin cargarTabla
     
    private List <Inventario> cargarInventarios() throws Exception{
List<Inventario> lsInv = null; 

        if(this.jcbSucursal.getSelectedItem().toString().equalsIgnoreCase("todos")){
            throw new Exception("Debe elegir una sucursal");
        }
        
        if(jdpFechaIni.getDate() == null){
            throw new Exception("No ingreso la fecha 'desde'");
        }
        
        if(jdpFechaHasta.getDate() == null){
            throw new Exception("No ingreso la fecha 'hasta'");
        }
        
        if(jdpFechaIni.getDate().compareTo(jdpFechaHasta.getDate()) > 0){
            throw new Exception("Fecha 'desde' debe ser menor a la fecha 'hasta'");
        }
        
        if (this.jcbSucursal.getSelectedItem().toString().equalsIgnoreCase("CENTRAL")) {//SI ES LA CENTRAL, busco en la bd local

            lsInv= InventarioFacade.getInstance().buscarPorFecha(jdpFechaIni.getDate(), 
                jdpFechaHasta.getDate(), (Sucursal) this.jcbSucursal.getSelectedItem());
        } else { //busco en la db central
            lsInv=InventarioFacade.getInstance().buscarPorFecha_Central(jdpFechaIni.getDate(), 
                jdpFechaHasta.getDate(), (Sucursal) this.jcbSucursal.getSelectedItem());
        }
      
        return lsInv;
        
    }//fin cargarUnidadesMedida
    
    private void seleccionarInventario(){

        try {
            this.setInventarioSelect((Inventario) jlInventario.getSelectedValue());

            if (this.getInventarioSelect() == null) {
                throw new Exception("Debe seleccionar un inventario de la lista");
            }
           
            this.setVisible(Boolean.FALSE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void salir(){
        this.setVisible(Boolean.FALSE);
    }
}
