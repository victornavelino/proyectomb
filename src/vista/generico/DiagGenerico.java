/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.generico;

import Recursos.JButtonEditor;
import Recursos.JButtonRender;
import entidades.articulo.TipoIva;
import facade.GenericoFacade;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author AFerSor
 */
public class DiagGenerico<T> extends javax.swing.JDialog {

    private List<T> lstGenerico;
    private Class<T> entidad;
    
    public DiagGenerico(java.awt.Frame parent, boolean modal, String titulo,String subTitulo, Class<T> entidad) {
        super(parent, modal);
        this.setLocationRelativeTo(parent);
        this.entidad = entidad;
        initComponents();
        this.setTitle(titulo);
        this.jlSubTitulo.setText(subTitulo);
        
         DefaultTableModel aModel = new DefaultTableModel();
         aModel.addColumn("Modificar");
         aModel.addColumn("Eliminar");
         aModel.addColumn("C贸digo");
         aModel.addColumn("Descripci贸n");
         
         Dimension dim = new Dimension(20,1);
         jtGenerico.setIntercellSpacing(new Dimension(dim));
         
         JTableHeader header = jtGenerico.getTableHeader();
        header.setBackground(Color.LIGHT_GRAY);
        header.setFont(new Font("TimesRoman", Font.BOLD, 16));
         
         jtGenerico.setModel(aModel);
         jtGenerico.setRowHeight(40);
         
         jtGenerico.getColumnModel().getColumn(0).setPreferredWidth(80);

         ImageIcon iEdit = new ImageIcon(getClass().getResource("/Imagenes/edit.png"));
         ImageIcon iDelete = new ImageIcon(getClass().getResource("/Imagenes/delete.png"));
         
        jtGenerico.getColumnModel().getColumn(0).setCellEditor(new JButtonEditor(jtGenerico,"Modificar", 
                new EventoBoton(this,this.jtGenerico,1,titulo, entidad),iEdit));
        jtGenerico.getColumnModel().getColumn(0).setCellRenderer(new JButtonRender(true, "Modificar", iEdit));
        
        jtGenerico.getColumnModel().getColumn(1).setPreferredWidth(80);
        jtGenerico.getColumnModel().getColumn(1).setCellEditor(
                new JButtonEditor(jtGenerico,"Eliminar", 
                        new EventoBoton(this,this.jtGenerico,2,titulo, entidad),iDelete));
        jtGenerico.getColumnModel().getColumn(1).setCellRenderer(
                new JButtonRender(true, "Eliminar",iDelete));
        
        jtGenerico.getColumnModel().getColumn(2).setPreferredWidth(80);
        
        jtGenerico.getColumnModel().getColumn(3).setPreferredWidth(150);

        //jtUnidadMedida.getColumnModel().getColumn(3).setCellEditor(new TextAreaEditor());
        
        this.jbNuevo.addActionListener(new EventoBoton(this, jtGenerico, 0,titulo, entidad));
        cargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jlSubTitulo = new javax.swing.JLabel();
        jbBuscar = new javax.swing.JButton();
        jtfCadena = new javax.swing.JTextField();
        jbNuevo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtGenerico = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setForeground(new java.awt.Color(254, 254, 254));

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(254, 254, 254), 1, true));
        jPanel1.setForeground(new java.awt.Color(254, 254, 254));

        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(189, 76, 81));
        jLabel1.setText("(Ingresar parte del nombre y se mostraran las posibles correspondencias en la tabla)");

        jlSubTitulo.setBackground(new java.awt.Color(167, 147, 128));
        jlSubTitulo.setFont(new java.awt.Font("Vrinda", 0, 24)); // NOI18N
        jlSubTitulo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlSubTitulo.setText(" titulo");
        jlSubTitulo.setToolTipText("");
        jlSubTitulo.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray, 2, true));

        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar2.png"))); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add.png"))); // NOI18N
        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jtGenerico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Operaci贸n", "C贸digo", "Nombre"
            }
        ));
        jScrollPane1.setViewportView(jtGenerico);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jbNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jtfCadena, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(188, 188, 188)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jlSubTitulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlSubTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbBuscar)
                    .addComponent(jtfCadena, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbNuevo)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jlSubTitulo.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        this.cargarTabla();
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbNuevoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiagGenerico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiagGenerico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiagGenerico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiagGenerico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiagGenerico dialog = new DiagGenerico(new javax.swing.JFrame(), true, "", "", null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JLabel jlSubTitulo;
    private javax.swing.JTable jtGenerico;
    private javax.swing.JTextField jtfCadena;
    // End of variables declaration//GEN-END:variables
    

    
     public void cargarTabla(){
         try{
             lstGenerico = GenericoFacade.getInstance().findLike(jtfCadena.getText(), this.entidad.getSimpleName());
             
             
             
             this.limpiarTabla();
             if(!lstGenerico.isEmpty()){
                 DefaultTableModel dtm = (DefaultTableModel)jtGenerico.getModel();

                 Object objeto = null;
                 Method campo;
                 Class[] sinParametro = null;
                 for(T a : lstGenerico){
                     
                     Object[] arrayG = new Object[4];
                     //id
                     campo = entidad.getDeclaredMethod("getId", sinParametro);
                     objeto = campo.invoke(a, new Object[]{});
                     arrayG[2] = objeto;
                     
   
                     /*Method[] methods = entidad.getDeclaredMethods();
            
            System.out.println("cant campos: " + methods.length);
            
            for(int i=0; i < methods.length; i++){
                System.out.println("Nombre del campo: " + 
                        methods[i].getName());
            }//fin for*/
                     
                     //Descripcion
                     campo = entidad.getDeclaredMethod("getDescripcion", sinParametro);
                     objeto = campo.invoke(a, new Object[]{});
                     
                     arrayG[3] = objeto;
                     
                     dtm.addRow(arrayG);
                 }//fin for
             }else{
                 JOptionPane.showMessageDialog(this,"No se encontraron datos", "Mensaje", JOptionPane.ERROR_MESSAGE);
             }
             
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"Error al cargar la tabla" + e, "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }//fin cargarTabla
     
    private void limpiarTabla(){
        int iCant = this.jtGenerico.getRowCount()-1;
        DefaultTableModel dtm = (DefaultTableModel)jtGenerico.getModel();
        while (iCant >= 0){
            dtm.removeRow(iCant);
            iCant--;
        }//fin while
    }//fin limpiarTabla
    
    public void actualizarCamposEnTabla(T entidad, int iRowSelect, int tipoOp){
        
        /*DefaultTableModel dtm = (DefaultTableModel) jtGenerico.getModel();
        Object[] arrayA = new Object[4];
        arrayA[2] = a.getId();
        arrayA[3] = a.getNombre();

        int iTama帽o = a.getLstUnidadMedida().size();
        String sUnidades = "";
        for (int i = 0; i < iTama帽o; i++) {
            sUnidades += a.getLstUnidadMedida().get(i).getNombre();
            if (i + 1 < iTama帽o) {
                sUnidades += ", ";
            }//fin if
        }//fin for
        arrayA[4] = sUnidades;
        arrayA[5] = a.getDescripcion();
         

        lstAnalisis.remove(iRowSelect);
        dtm.removeRow(iRowSelect);
        //modificar
        if(tipoOp == 1){
            lstAnalisis.add(iRowSelect, a);
            dtm.insertRow(iRowSelect, arrayA);
        }//fin if
        
        

        
        
         //arrayUM[2] = new JButton();
         
        
        //this.cargarTabla();
        System.out.println("Termino");*/
        
    }//fin actualizarCamposEnTabla
    
    public class EventoBoton implements ActionListener{

        private JTable jTable;
        private int tipoOperacion;
        private JDialog jdPadre;
        private Class<T> entidad;
        private String titulo;
        
        public EventoBoton(JDialog jdPadre, JTable jTable, int op, String titulo, Class<T> entidad){
            this.jTable = jTable;
            this.tipoOperacion = op;
            this.jdPadre = jdPadre;
            this.entidad = entidad;
            this.titulo = titulo;
        }
        @Override
        public void actionPerformed(ActionEvent e) {
            

            DiagGenericoEdit dgE = null;
            
            
            
            int rowSelect = -1;
            
            System.out.println("titulo " + titulo);
            
            switch(this.tipoOperacion){

                case 0:
                    dgE = new DiagGenericoEdit(this.jdPadre, Boolean.TRUE,titulo,"  Nuevo", this.entidad);

                    break;
                case 1://Modificar
                    
                    dgE = new DiagGenericoEdit(this.jdPadre, Boolean.TRUE,titulo,"  Modificar", this.entidad);
                    
                    rowSelect = jTable.getSelectedRow();
                    dgE.cargarCampos(String.valueOf(jTable.getValueAt(rowSelect, 2)), (String)jTable.getValueAt(rowSelect, 3));

                    break;
                    
                case 2://Eliminar
                    
                    dgE = new DiagGenericoEdit(this.jdPadre, Boolean.TRUE,titulo,"  Eliminar", this.entidad);
    
                    rowSelect = jTable.getSelectedRow();
                    dgE.cargarCampos(String.valueOf(jTable.getValueAt(rowSelect, 2)), (String)jTable.getValueAt(rowSelect, 3));
                    
                    break;
            }//fin switch
            
            
            dgE.definirOperacion(tipoOperacion);
            dgE.setLocationRelativeTo(null);
            dgE.setVisible(true);
            cargarTabla();
            
            
            
            //podria buscar el elemento en la base de datos y actualizar con el que esta
            //cargar tod es mas costoso
            //System.out.println("Fila seleccionada: " + rowSelect);
            //si si modifica o elimina actualiza los datos
            /*if(rowSelect>=0 && dgA.getRstOperacion()){
                ((DiagGenerico)jdPadre).actualizarCamposEnTabla(dgA.getAnalisis(), rowSelect, tipoOperacion);
            }*/
        }//fin actionPerformed
        
    }//fin EventoBoton

}
