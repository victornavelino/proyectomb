/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.generico;

import entidades.caja.PlanTarjeta;
import entidades.caja.TarjetaDeCredito;
import entidades.caja.TipoDeGasto;
import facade.GenericoFacade;
import includes.Comunes;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicSplitPaneUI;
import javax.swing.tree.DefaultTreeCellEditor;
import jxl.format.Border;
import org.eclipse.persistence.internal.jaxb.many.JAXBArrayAttributeAccessor;
import org.jdesktop.swingx.HorizontalLayout;
import org.jdesktop.swingx.VerticalLayout;
import org.netbeans.lib.awtextra.AbsoluteLayout;
import org.openide.util.actions.ActionPerformer;
import vista.promocion.DiagAdminPromociones;

/**
 *
 * @author root
 */
public class DiagGenericoMulti<T> extends javax.swing.JDialog {

    /**
     * Creates new form DiagGenericoMulti
     *
     * @param parent
     * @param modal
     */
    private Class<T> entidad;
    //private List<String> listaComponentes;
    private List<JComponent> listaComponentes;

    public DiagGenericoMulti(java.awt.Frame parent, boolean modal, String titulo, String subTitulo, Class<T> entidad) {
        super(parent, modal);
        initComponents();
        this.entidad = entidad;
        this.setTitle(titulo);
//        lbSubtitulo.setText(subTitulo);
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        btnAceptar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );

        btnAceptar.setText(org.openide.util.NbBundle.getMessage(DiagGenericoMulti.class, "DiagGenericoMulti.btnAceptar.text")); // NOI18N
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(btnAceptar)
                .addContainerGap(218, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAceptar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed

        try {
            aceptar();
        } catch (Exception ex) {
            Logger.getLogger(DiagGenericoMulti.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiagGenericoMulti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiagGenericoMulti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiagGenericoMulti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiagGenericoMulti.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiagGenericoMulti dialog = new DiagGenericoMulti(new javax.swing.JFrame(), true, "titulo", "subtitulo", TipoDeGasto.class);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JPanel jPanel;
    // End of variables declaration//GEN-END:variables
    private void inicializarComponentes() {
        jPanel.setLayout(new VerticalLayout());
        Field properties[] = entidad.getDeclaredFields();
        listaComponentes = new ArrayList<>();
        for (Field field : properties) {
            System.out.println("tipos: " + field.getType());

            if (!field.getType().toString().toLowerCase().contains("entidad")) {
                switch (field.getType().toString()) {
                    case "class java.lang.String":
                        agregarComponenteString(field);
                        break;
                }
            } else {
                //en caso de que sea una atributo tipo entidad
                agregarComponentesEntidades(field);
            }

            System.out.println(field.getName() + " > " + field.getType());
        }

    }

    private void agregarComponenteString(Field field) {
        String nombreComp = field.getName();
        String tfnombre = nombreComp;
        JLabel lb = new JLabel();
        lb.setText(nombreComp);
        jPanel.add(lb);
        JTextField tf = new JTextField();
        tf.setName(tfnombre);
        listaComponentes.add(tf);

        jPanel.add(tf, BorderLayout.AFTER_LAST_LINE);
        jPanel.revalidate();
        validate();
    }

    private void agregarComponentesEntidades(Field field) {
        String nombreComp = field.getName();
        String tfnombre = nombreComp;
        //label
        JLabel lb = new JLabel();
        lb.setText(nombreComp);
        jPanel.add(lb);
        //textfield
        JTextField tf = new JTextField();
        tf.setName(tfnombre);
        //agregamos a la lista para recurperar luego
        listaComponentes.add(tf);
        jPanel.add(tf);
        //boton buscar
        JButton btn = new JButton("Buscar");
        btn.setName("btnAgregar" + field.getName());
        jPanel.add(btn, BorderLayout.CENTER);
        //boton quitar
        JButton btn1 = new JButton("Quitar");
        btn.setName("btnQuitar" + field.getName());
        btn.addActionListener(new seleccionarElemento(field));
        jPanel.add(btn1);
        //refrescamos el panel
        jPanel.revalidate();
        validate();
    }

    private void aceptar() throws Exception {
        Object objeto = entidad.newInstance();

        for (JComponent componente : listaComponentes) {
            System.out.println("compoennte: " + componente.getName());
            //nombre del campo
            Class[] cArg = new Class[1];
            cArg[0] = String.class;
               
            //Obtener nombre de Metodo Setter
            Method campo = entidad.getDeclaredMethod("set"
                    + String.valueOf(componente.getName().charAt(0)).toUpperCase()
                    + componente.getName().substring(1), cArg);
            //insertando valor (preguntando que tipo de componente es)
            if (componente instanceof JTextField) {
                campo.invoke(objeto, ((JTextField) componente).getText().trim().toUpperCase());
            }

            System.out.println("paso: " + objeto.toString());

        }
        GenericoFacade.getInstance().alta(objeto);

    }

    private static class seleccionarElemento<T> implements ActionListener {

        private Field campo;

        private seleccionarElemento(Field campo) {
            this.campo = campo;
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            DiagGenericoBuscarEntidad diagGenericoBuscarEntidad = new DiagGenericoBuscarEntidad(null, true, campo.getName(), campo);
            diagGenericoBuscarEntidad.setLocation(Comunes.centrarDialog(diagGenericoBuscarEntidad));
            diagGenericoBuscarEntidad.setVisible(true);
            if (diagGenericoBuscarEntidad.getEntidad() != null) {
                Object objeto = diagGenericoBuscarEntidad.getObjeto();

            }
        }
    }
}
