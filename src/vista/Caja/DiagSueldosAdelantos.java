/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.Caja;

import entidades.Sucursal;
import entidades.caja.Caja;
import entidades.caja.MovimientoCaja;
import entidades.caja.Sueldo;
import entidades.empleado.Empleado;
import entidades.usuario.Usuario;
import facade.CajaFacade;
import facade.MovimientoCajaFacade;
import facade.EmpleadoFacade;
import includes.Comunes;
import includes.ModeloTablaNoEditable;
import java.awt.Color;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author bangho
 */
public class DiagSueldosAdelantos extends javax.swing.JDialog {

    private Sueldo sueldo;
    private Usuario usuario;
    private ModeloTablaNoEditable modeloTablaSueldos;
    private Date fechaHoy;
    private Sucursal sucursal;
    private Caja caja;

    /**
     * Creates new form DiagSueldosAdelantos
     *
     * @param parent
     * @param modal
     * @param sucursal
     * @param usuario
     * @param caja
     */
    public DiagSueldosAdelantos(java.awt.Frame parent, boolean modal, Usuario usuario, Sucursal sucursal, Caja caja) {
        super(parent, modal);
        this.usuario = usuario;
        this.sucursal = sucursal;
        this.caja = caja;
        initComponents();
        inicializar();
        fechaHoy = Comunes.obtenerFechaActualDesdeDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSueldos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbEmpleados = new javax.swing.JComboBox();
        tfImporte = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfDescripcion = new javax.swing.JTextField();
        dpFecha = new org.jdesktop.swingx.JXDatePicker();
        ftfHora = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(DiagSueldosAdelantos.class, "DiagSueldosAdelantos.title")); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiagSueldosAdelantos.class, "DiagSueldosAdelantos.jPanel1.border.title"))); // NOI18N

        tblSueldos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSueldos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSueldosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSueldos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText(org.openide.util.NbBundle.getMessage(DiagSueldosAdelantos.class, "DiagSueldosAdelantos.jLabel1.text")); // NOI18N

        tfImporte.setText(org.openide.util.NbBundle.getMessage(DiagSueldosAdelantos.class, "DiagSueldosAdelantos.tfImporte.text")); // NOI18N
        tfImporte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfImporteKeyTyped(evt);
            }
        });

        jLabel2.setText(org.openide.util.NbBundle.getMessage(DiagSueldosAdelantos.class, "DiagSueldosAdelantos.jLabel2.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(DiagSueldosAdelantos.class, "DiagSueldosAdelantos.jLabel3.text")); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getMessage(DiagSueldosAdelantos.class, "DiagSueldosAdelantos.jLabel4.text")); // NOI18N

        tfDescripcion.setText(org.openide.util.NbBundle.getMessage(DiagSueldosAdelantos.class, "DiagSueldosAdelantos.tfDescripcion.text")); // NOI18N

        dpFecha.setFormats("dd/MM/yyyy");

        try {
            ftfHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel9.setText(org.openide.util.NbBundle.getMessage(DiagSueldosAdelantos.class, "DiagSueldosAdelantos.jLabel9.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dpFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(ftfHora, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)))
            .addComponent(tfDescripcion)
            .addComponent(cbEmpleados, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel9)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dpFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfImporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add.png"))); // NOI18N
        btnAgregar.setText(org.openide.util.NbBundle.getMessage(DiagSueldosAdelantos.class, "DiagSueldosAdelantos.btnAgregar.text")); // NOI18N
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/edit.png"))); // NOI18N
        btnModificar.setText(org.openide.util.NbBundle.getMessage(DiagSueldosAdelantos.class, "DiagSueldosAdelantos.btnModificar.text")); // NOI18N
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/delete.png"))); // NOI18N
        btnEliminar.setText(org.openide.util.NbBundle.getMessage(DiagSueldosAdelantos.class, "DiagSueldosAdelantos.btnEliminar.text")); // NOI18N
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregar)
                            .addComponent(btnModificar)
                            .addComponent(btnEliminar))
                        .addGap(20, 20, 20))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        SueldoadelantoAlta();
        Comunes.setOcultarColumnasJTable(tblSueldos, 0);
        limpiar();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void tblSueldosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSueldosMouseClicked
        cargarSueldo();
        btnAgregar.setEnabled(false);
        btnModificar.setEnabled(true);
        btnEliminar.setEnabled(true);

    }//GEN-LAST:event_tblSueldosMouseClicked

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        ModificarSueldoAdelanto();
        Comunes.setOcultarColumnasJTable(tblSueldos, 0);


    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        EliminarSueldo();


    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tfImporteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfImporteKeyTyped
        // TODO add your handling code here:
        Comunes.soloNumeros(tfImporte, evt);
    }//GEN-LAST:event_tfImporteKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiagSueldosAdelantos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiagSueldosAdelantos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiagSueldosAdelantos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiagSueldosAdelantos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiagSueldosAdelantos dialog = new DiagSueldosAdelantos(new javax.swing.JFrame(), true, new Usuario(), new Sucursal(), new Caja());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox cbEmpleados;
    private org.jdesktop.swingx.JXDatePicker dpFecha;
    private javax.swing.JFormattedTextField ftfHora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSueldos;
    private javax.swing.JTextField tfDescripcion;
    private javax.swing.JTextField tfImporte;
    // End of variables declaration//GEN-END:variables

    private void inicializar() {
        //CARGAR TABLA CON ADELANTOS DE SUELDO
        caja = CajaFacade.getInstance().getCajaAbierta(sucursal, usuario);
        if (caja == null) {
            Comunes.mensajeError("Es posible que no se haya abierto caja", "No existe caja abierta");
            this.dispose();
        }
        cargarTablaSueldos(MovimientoCajaFacade.getInstance().getSueldosAdelantos(caja.getFechaInicio()));
        Comunes.setOcultarColumnasJTable(tblSueldos, 0);
        //CARGAR COMBO LISTA EMPLEADOS
        cargarEmpleados();
        btnAgregar.setEnabled(true);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }

    private void cargarEmpleados() {
        Comunes.cargarJCombo(cbEmpleados, EmpleadoFacade.getInstance().getTodos());
    }

    private void cargarAdelantos() {

    }

    private void SueldoadelantoAlta() {
        if (validarAdelanto() && cbEmpleados.getSelectedIndex() != -1) {
            try {
                caja = CajaFacade.getInstance().getCajaAbierta(sucursal, usuario);

                BigDecimal saldoFinalCaja = CajaFacade.getInstance().getSaldoFinalCaja(caja);

                //obtenemos el importe del gasto
                BigDecimal importeGasto = new BigDecimal(tfImporte.getText());
                if (saldoFinalCaja.compareTo(importeGasto) >= 0) {
                    sueldo = new Sueldo();
                    sueldo.setEmpleado((Empleado) cbEmpleados.getSelectedItem());
//                sueldo.setFecha(dpFecha.getDate());
                    sueldo.setFecha(Comunes.concatenarFechaConHora(dpFecha.getDate(), ftfHora.getText()));
                    sueldo.setImporte(importeGasto);
                    sueldo.setDescripcion(tfDescripcion.getText());
                    sueldo.setUsuario(usuario);
                    sueldo.setSucursal(sucursal);
                    MovimientoCajaFacade.getInstance().alta(sueldo);
                    JOptionPane.showMessageDialog(null, "Datos Registrados");
                    cargarTablaSueldos(MovimientoCajaFacade.getInstance().getSueldosAdelantos(caja.getFechaInicio()));
                } else {
                    JOptionPane.showMessageDialog(null, "No tiene saldo suficiente para realizar este adelanto\n"
                            + "La Caja dispone de $ " + saldoFinalCaja);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error: " + e);
            }
        }
    }

    private boolean validarAdelanto() {
        if (tfImporte.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe tipear un importe");
            tfImporte.grabFocus();
            return false;
        }
        if (tfDescripcion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe tipear la descripcion");
            tfDescripcion.grabFocus();
            return false;
        }
        if (ftfHora.getText().equals("  :  ")) {
            JOptionPane.showMessageDialog(null, "Debe cargar la hora en formato HH:MM   ejemplo 16:30");
            ftfHora.grabFocus();
            return false;
        }
        if (Comunes.concatenarFechaConHora(dpFecha.getDate(), ftfHora.getText()) == null) {
            JOptionPane.showMessageDialog(null, "Debe cargar correctamente el formato ejemplo 16:30");
            ftfHora.grabFocus();
            return false;
        }
        return true;

    }

    private void cargarTablaSueldos(List<Sueldo> sueldosAdelantos) {
        modeloTablaSueldos = new ModeloTablaNoEditable();
        cargarEncabezadosTablaSueldos(modeloTablaSueldos);
        configurarTabla(tblSueldos);
        try {
            cargarSueldos(sueldosAdelantos);
        } catch (Exception ex) {
            Logger.getLogger(DiagSueldosAdelantos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarEncabezadosTablaSueldos(ModeloTablaNoEditable modeloTablaSueldos) {
        modeloTablaSueldos.addColumn("Id");
        modeloTablaSueldos.addColumn("Empleado");
        modeloTablaSueldos.addColumn("Fecha");
        modeloTablaSueldos.addColumn("Importe");
        modeloTablaSueldos.addColumn("Observaciones");
        tblSueldos.setModel(modeloTablaSueldos);
    }

    private void configurarTabla(JTable tbl) {
        JViewport scroll = (JViewport) tbl.getParent();
        int ancho = scroll.getWidth();
        int anchoColumna = 0;
        TableColumnModel modeloColumna = tbl.getColumnModel();
        TableColumn columnaTabla;
        for (int i = 0; i < tbl.getColumnCount(); i++) {
            columnaTabla = modeloColumna.getColumn(i);
            switch (i) {
                case 0:
                    anchoColumna = (1 * ancho) / 100;
                    break;
                case 1:
                    anchoColumna = (20 * ancho) / 100;
                    break;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                    anchoColumna = (5 * ancho) / 100;
                    break;
            }
            columnaTabla.setPreferredWidth(anchoColumna);
            tbl.setColumnModel(modeloColumna);
        }
        tbl.getTableHeader().setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
        tbl.getTableHeader().setBackground(java.awt.Color.WHITE);
        tbl.getTableHeader().setForeground(Color.BLACK);
        //Si le queremos cambiar el tamaño a la tablita
        tbl.setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
    }

    private void cargarSueldos(List<Sueldo> sueldosAdelantos) {
        try {
            modeloTablaSueldos = new ModeloTablaNoEditable();
            cargarEncabezadosTablaSueldos(modeloTablaSueldos);
            for (Sueldo s : sueldosAdelantos) {
                cargarSueldo(s);
            }

            tblSueldos.setModel(modeloTablaSueldos);
            //Comunes.setOcultarColumnasJTable(tblSueldos, 0);
        } catch (Exception ex) {
            Logger.getLogger(DiagSueldosAdelantos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarSueldo(Sueldo sueldo) {
        Object[] fila = new Object[5];
        fila[0] = sueldo.getId();
        fila[1] = sueldo.getEmpleado().getApellido() + sueldo.getEmpleado().getNombre();
        SimpleDateFormat formats = new SimpleDateFormat("dd/MM/yyyy");
        fila[2] = formats.format(sueldo.getFecha());
        fila[3] = sueldo.getImporte();
        fila[4] = sueldo.getDescripcion();
        modeloTablaSueldos.addRow(fila);
    }

    private void cargarSueldo() {
        sueldo = (Sueldo) MovimientoCajaFacade.getInstance().buscar((Long) tblSueldos.getValueAt(tblSueldos.getSelectedRow(), 0));
        tfImporte.setText(String.valueOf(sueldo.getImporte()));
        tfDescripcion.setText(sueldo.getDescripcion());
        dpFecha.setDate(sueldo.getFecha());
        try {
            cbEmpleados.setSelectedItem(sueldo.getEmpleado());
        } catch (Exception e) {
        }
        try {
         ftfHora.setText(Comunes.extraerHoraDeFecha(sueldo.getFecha()));   
        } catch (Exception e) {
        }
       

    }

    private void ModificarSueldoAdelanto() {
        if (validarAdelanto() && cbEmpleados.getSelectedIndex() != -1) {
            try {
                sueldo.setEmpleado((Empleado) cbEmpleados.getSelectedItem());
                sueldo.setFecha(Comunes.concatenarFechaConHora(dpFecha.getDate(), ftfHora.getText()));
                sueldo.setImporte(new BigDecimal(tfImporte.getText()));
                sueldo.setDescripcion(tfDescripcion.getText());
                sueldo.setUsuario(usuario);
                MovimientoCajaFacade.getInstance().modificar(sueldo);
                JOptionPane.showMessageDialog(null, "Datos modificados!!!");
                cargarTablaSueldos(MovimientoCajaFacade.getInstance().getSueldosAdelantos());
                limpiar();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error: " + e);
            }
        }
    }

    private void EliminarSueldo() {
        try {
            MovimientoCajaFacade.getInstance().eliminar(sueldo.getId());
            JOptionPane.showMessageDialog(null, "Registro Eliminado");
            cargarTablaSueldos(MovimientoCajaFacade.getInstance().getSueldosAdelantos());
            limpiar();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e);
        }
    }

    private void limpiar() {
        sueldo = new Sueldo();
        tfDescripcion.setText("");
        tfImporte.setText("");
        ftfHora.setText("");
        btnAgregar.setEnabled(true);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }

}
