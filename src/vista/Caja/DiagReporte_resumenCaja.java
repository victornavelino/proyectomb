/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.Caja;

import Recursos.ProgressBar;
import entidades.Sucursal;
import entidades.articulo.Articulo;
import entidades.caja.Caja;
import entidades.caja.CobranzaCtaCte;
import entidades.caja.Gasto;
import entidades.caja.Ingreso;
import entidades.caja.MovimientoCaja;
import entidades.caja.PlanTarjeta;
import entidades.caja.RetiroEfectivo;
import entidades.caja.Sueldo;
import entidades.cliente.Organismo;
import entidades.cliente.Persona;

import facade.CajaFacade;
import facade.ClienteFacade;
import facade.SucursalFacade;
import facade.VentaFacade;
import includes.Comunes;
import includes.ExportarExcel;
import includes.FormatoTablaConColor;
import includes.ModeloTablaNoEditable;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

/**
 *
 * @author vicky
 */
public class DiagReporte_resumenCaja extends javax.swing.JDialog {

    /**
     * Creates new form DiagClienteGenerico
     */
    private ModeloTablaNoEditable modeloTablaCaja;
    private Vector headers = new Vector();
    private Vector data = new Vector();

    private Persona persona;
    private Organismo organismo;
    private Sucursal sucursal;

    private int AuxTicket, AuxSucursal;
    private String tipoOperacion;

    public DiagReporte_resumenCaja(java.awt.Frame parent, boolean modal, Sucursal sucursal) {
        super(parent, modal);
        initComponents();
        this.sucursal = sucursal;
        inicializarComponentes();
    }

    public DiagReporte_resumenCaja(java.awt.Frame parent, boolean modal, String tipoOperacion, Sucursal sucursal) {
        super(parent, modal);
        initComponents();
        this.tipoOperacion = tipoOperacion;
        this.sucursal = sucursal;
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgTipo_reporte = new javax.swing.ButtonGroup();
        btnCerrar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCaja = new javax.swing.JTable();
        btnExportarArt = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jdpFecha_desde = new org.jdesktop.swingx.JXDatePicker();
        jLabel3 = new javax.swing.JLabel();
        jdpFecha_hasta = new org.jdesktop.swingx.JXDatePicker();
        jLabel4 = new javax.swing.JLabel();
        jcbSucursal = new javax.swing.JComboBox();
        btnGenerar = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/back.png"))); // NOI18N
        btnCerrar.setText(org.openide.util.NbBundle.getMessage(DiagReporte_resumenCaja.class, "DiagReporte_resumenCaja.btnCerrar.text")); // NOI18N
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiagReporte_resumenCaja.class, "DiagReporte_resumenCaja.jPanel3.border.title"))); // NOI18N

        tblCaja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Anulado", "Descuento", "Fecha", "Monto", "Numero Ticket", "Apellido Cli", "Nombre Cli", "Nro Dni", "Tipo Dni", "Razon Social", "CUIL", "Cod Sucursal", "Usu", "CantidadPeso", "PrecioxCatidad", "Precio Cobrado", "Precio Unitario", "Articulo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCaja);

        btnExportarArt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/new_page.png"))); // NOI18N
        btnExportarArt.setText(org.openide.util.NbBundle.getMessage(DiagReporte_resumenCaja.class, "DiagReporte_resumenCaja.btnExportarArt.text")); // NOI18N
        btnExportarArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarArtActionPerformed(evt);
            }
        });

        jLabel1.setText(org.openide.util.NbBundle.getMessage(DiagReporte_resumenCaja.class, "DiagReporte_resumenCaja.jLabel1.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(DiagReporte_resumenCaja.class, "DiagReporte_resumenCaja.jLabel2.text")); // NOI18N

        jdpFecha_desde.setFormats("dd/MM/yyyy");

        jLabel3.setText(org.openide.util.NbBundle.getMessage(DiagReporte_resumenCaja.class, "DiagReporte_resumenCaja.jLabel3.text")); // NOI18N

        jdpFecha_hasta.setFormats("dd/MM/yyyy");

        jLabel4.setText(org.openide.util.NbBundle.getMessage(DiagReporte_resumenCaja.class, "DiagReporte_resumenCaja.jLabel4.text")); // NOI18N

        jcbSucursal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnGenerar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/process.png"))); // NOI18N
        btnGenerar.setText(org.openide.util.NbBundle.getMessage(DiagReporte_resumenCaja.class, "DiagReporte_resumenCaja.btnGenerar.text")); // NOI18N
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1321, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnExportarArt, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jdpFecha_desde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jdpFecha_hasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbSucursal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(35, 35, 35)
                        .addComponent(btnGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jdpFecha_desde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jdpFecha_hasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jcbSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGenerar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnExportarArt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(584, 584, 584)
                .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(605, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCerrar)
                .addContainerGap())
        );

        jPanel3.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(DiagReporte_resumenCaja.class, "DiagReporte_resumenCaja.jPanel3.AccessibleContext.accessibleName")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnExportarArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarArtActionPerformed
        Exportar();
    }//GEN-LAST:event_btnExportarArtActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        modeloTablaCaja = new ModeloTablaNoEditable();
        cargarEncabezadosTablaCaja(modeloTablaCaja);
        configurarTabla(tblCaja);
        try {
            if (jdpFecha_desde.getDate().compareTo(jdpFecha_hasta.getDate()) > 0) {
                throw new Exception("La fecha de cierre 'desde' debe ser menor a la fecha 'hasta'");
            }//fin if

            Calendar calendar = Calendar.getInstance();
            calendar.setTime(jdpFecha_hasta.getDate()); // Configuramos la fecha que se recibe
            calendar.add(Calendar.DAY_OF_YEAR, 1);
            try {
                sucursal = (Sucursal) this.jcbSucursal.getSelectedItem();
            } catch (Exception e) {
                sucursal = null;
            }

            List<Caja> cajas = CajaFacade.getInstance().findCajaByFechaCierreSucursal(
                    jdpFecha_desde.getDate(),
                    calendar.getTime(), sucursal);

            if (cajas.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No se encontraron datos. Vuelva a realizar la búsqueda. ");
            } else {
                //cargar los datos

                System.out.println("segunda consulta");

                this.jProgressBar1.setMinimum(0);
                this.jProgressBar1.setMaximum(cajas.size());
                //new Thread(new ProgressBar( this.jProgressBar1 , cajas.size() )).start();

                //this.inicio();
                CargarCajas cc = new CargarCajas(cajas, this.btnGenerar, this.btnExportarArt);
                cc.start();

                /*this.cargarTablaCaja(CajaFacade.getInstance().findCajaByFechaCierreSucursal(
                 jdpFecha_desde.getDate(),
                 jdpFecha_hasta.getDate(), sucursal));*/
                System.out.println("fin segunda consulta");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGenerarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiagReporte_resumenCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiagReporte_resumenCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiagReporte_resumenCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiagReporte_resumenCaja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiagReporte_resumenCaja dialog = new DiagReporte_resumenCaja(new javax.swing.JFrame(), true, new Sucursal());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgTipo_reporte;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnExportarArt;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcbSucursal;
    private org.jdesktop.swingx.JXDatePicker jdpFecha_desde;
    private org.jdesktop.swingx.JXDatePicker jdpFecha_hasta;
    private javax.swing.JTable tblCaja;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
        this.setTitle("Reportes de Caja - Resumen de Caja");
        modeloTablaCaja = new ModeloTablaNoEditable();
        cargarEncabezadosTablaCaja(modeloTablaCaja);
        if (sucursal.getCodigo().equals("1")) {
            //SI ES LA CENTRAL QUE MUESTRE TODAS LAS CAJAS DE TODAS LAS SUCURSALES
            //System.out.println("entro central: "+sucursal.getCodigo());
            try {
                //mostrar en el combo todas las sucursales
                Comunes.cargarJComboConBlancoPersonalizado(jcbSucursal, SucursalFacade.getInstance().getTodos(), "Todos");

            } catch (Exception e) {
            }
        } else {
            //MOSTRAMOS SOLO LAS CAJAS DE LA SUCURSAL
            try {
                //cargar solo la sucursal que esta
                Comunes.cargarJCombo(jcbSucursal, SucursalFacade.getInstance().buscarPorNombre(sucursal.getNombre()));
            } catch (Exception e) {
            }
        }

        AuxTicket = 0;
        AuxSucursal = 0;

    }

    private void cargarEncabezadosTablaCaja(ModeloTablaNoEditable modeloTablaCaja) {
        // modeloTablaCaja.addColumn("Id");
        modeloTablaCaja.addColumn("Caja Inicial");
        modeloTablaCaja.addColumn("Caja Final");
        modeloTablaCaja.addColumn("Fecha Apertura");
        modeloTablaCaja.addColumn("Fecha Cierre");
        modeloTablaCaja.addColumn("Sucursal");
        //modeloTablaCaja.addColumn("Usuario"); NO VA
        modeloTablaCaja.addColumn("Gastos");
        modeloTablaCaja.addColumn("Ingresos por Pedidos");
        modeloTablaCaja.addColumn("Ingresos por Pedidos S/Promo");
        modeloTablaCaja.addColumn("Dif. Pedidos por Promo");
        modeloTablaCaja.addColumn("Ingresos Eventuales");
        modeloTablaCaja.addColumn("Ingresos Eventuales S/Promo");
        modeloTablaCaja.addColumn("Dif. Eventuales por Promo");
        modeloTablaCaja.addColumn("Dif. de Caja");
        modeloTablaCaja.addColumn("Ingresos");
        modeloTablaCaja.addColumn("Total S/Promo");
        //modeloTablaCaja.addColumn("Total C/Promo"); NO VA
        modeloTablaCaja.addColumn("Dif. por Promo");

        //modeloTablaCaja.addColumn("Ingresos por Pedidos C/Promo"); NO VA
        tblCaja.setModel(modeloTablaCaja);
    }

    private void configurarTabla(JTable tbl) {
        JViewport scroll = (JViewport) tbl.getParent();
        int ancho = scroll.getWidth();
        int anchoColumna = 0;
        TableColumnModel modeloColumna = tbl.getColumnModel();
        TableColumn columnaTabla;
        for (int i = 0; i < tbl.getColumnCount(); i++) {
            columnaTabla = modeloColumna.getColumn(i);
            switch (i) {
                case 0:
                    anchoColumna = (7 * ancho) / 100;
                    break;
                case 1:
                    anchoColumna = (7 * ancho) / 100;
                    break;
                case 2:
                    anchoColumna = (10 * ancho) / 100;
                    break;
                case 3:
                    anchoColumna = (10 * ancho) / 100;
                    break;
                case 4:
                    anchoColumna = (15 * ancho) / 100;
                    break;
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:

                    anchoColumna = (7 * ancho) / 100;
                    break;
            }
            columnaTabla.setPreferredWidth(anchoColumna);
            tbl.setColumnModel(modeloColumna);
        }
        tbl.getTableHeader().setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
        tbl.getTableHeader().setBackground(java.awt.Color.WHITE);
        tbl.getTableHeader().setForeground(Color.BLACK);
        //Si le queremos cambiar el tamaño a la tablita
        tbl.setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));

        //scroll horizontal
        tbl.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tbl.doLayout();
    }

    private void Exportar() {
        new ExportarExcel().crearExcelJtable(tblCaja, "Listado de Cajas");
        modeloTablaCaja = new ModeloTablaNoEditable();
        cargarEncabezadosTablaCaja(modeloTablaCaja);
    }//Exportar()

    public class CargarCajas extends Thread {

        List<Caja> lstCaja;
        JButton botonUno;
        JButton botonDos;

        public CargarCajas(List<Caja> lstCaja, JButton botonUno, JButton botonDos) {
            this.lstCaja = lstCaja;
            this.botonUno = botonUno;
            this.botonDos = botonDos;
        }

        private void cargarCaja(Caja caja) {

            SimpleDateFormat formats = new SimpleDateFormat("dd/MM/yyyy hh:mm:ss");
            DecimalFormatSymbols simboloSeparador = new DecimalFormatSymbols(Locale.ENGLISH);
            simboloSeparador.setDecimalSeparator(',');
            DecimalFormat formatoConComa = new DecimalFormat("#####.###", simboloSeparador);
            Object[] fila = new Object[16];//17
            fila[0] = "-" + formatoConComa.format(caja.getCajaInicial());//.toString().replace('.', ',')
            fila[1] = formatoConComa.format(caja.getCajaFinal());//.toString().replace('.', ',')
            try {
                fila[2] = formats.format(caja.getFechaInicio());
            } catch (Exception e) {
            }
            try {
                fila[3] = formats.format(caja.getFechaFin());
            } catch (Exception e) {
            }
            fila[4] = caja.getSucursal().getCodigo() + " - " + caja.getSucursal().getNombre();
            /*try {
             fila[5] = caja.getUsuario().getNombreUsuario();
             } catch (Exception e) {
             }*/

            //GASTOS
            BigDecimal bgGasto = new BigDecimal("0.00");

            //INGRESO
            BigDecimal bgIngreso = new BigDecimal("0.00");

            //DIF. DE CAJA
            BigDecimal bgDifCaja = new BigDecimal("0.00");

            //TOTAL SIN PROMO
            BigDecimal bgTotalSinPromo = new BigDecimal("0.00");
            BigDecimal bgTotalSinPromo_2 = new BigDecimal("0.00");

            //TOTAL CON PROMO
            BigDecimal bgTotalConPromo = new BigDecimal("0.00");

            //DIF. POR PROMO
            BigDecimal bgDifPromo = new BigDecimal("0.00");

            //TOTAL INGRESO POR PEDIDO
            BigDecimal bgTotalIngreso_porPedido = new BigDecimal("0.00");

            //TOTAL INGRESO POR PEDIDO SIN PROMO
            BigDecimal bgTotalIngreso_porPedido_sinPromo = new BigDecimal("0.00");

            //TOTAL INGRESO POR PEDIDO POR PROMO
            BigDecimal bgTotalIngreso_porPedido_conPromo = new BigDecimal("0.00");

            //DIF. INGRESO POR PEDIDO POR PROMO
            BigDecimal bgDifIngreso_porPedio_Promo = new BigDecimal("0.00");

            //TOTAL INGRESO EVENTUAL
            BigDecimal bgTotalIngreso_eventual = new BigDecimal("0.00");
            //TOTAL DESCUENTO INGRESO EVENTUAL
            BigDecimal TotalDescuento_Ingreso_eventual = new BigDecimal("0.00");

            //TOTAL INGRESO POR PEDIDO SIN PROMO
            BigDecimal bgTotalIngreso_eventual_sinPromo = new BigDecimal("0.00");

            //TOTAL INGRESO POR PEDIDO POR PROMO
//        BigDecimal bgTotalIngreso_eventual_conPromo = new BigDecimal("0.00"); 
            //DIF. INGRESO POR PEDIDO POR PROMO
            BigDecimal bgDifIngreso_eventual_Promo = new BigDecimal("0.00");

            System.out.println("FOR MOVIMIENTO CAJA: " + caja.getMovimientosCaja().size());
            for (MovimientoCaja mc : caja.getMovimientosCaja()) {

                switch (mc.getClass().getSimpleName()) {

                    case "Gasto":
                        bgGasto = bgGasto.add(mc.getImporte());
                        break;

                    /*    case "Ingreso":
                     bgIngreso = bgIngreso.add(mc.getImporte());
                     break;   */
                }// fin switch
            }//fin for

            //GASTOS
            if (bgGasto.compareTo(new BigDecimal("0.00")) != 0) {
                bgGasto = bgGasto.setScale(2, BigDecimal.ROUND_HALF_UP);
                fila[5] = formatoConComa.format(bgGasto);//.toString().replace('.', ',')
            } else {
                fila[5] = "00,00";//,
            }

            //TOTAL ING. POR PEDIDO
            bgTotalIngreso_porPedido = VentaFacade.getInstance().getTotalVentasEntrega(caja.getFechaInicio(), caja.getFechaFin(), caja.getSucursal());
            //System.out.println("TOTAL PEDIDO "+ bgTotalIngreso_porPedido);
            if (bgTotalIngreso_porPedido != null) {
                bgTotalIngreso_porPedido = bgTotalIngreso_porPedido.setScale(2, BigDecimal.ROUND_HALF_UP);
                fila[6] = formatoConComa.format(bgTotalIngreso_porPedido);//.toString().replace('.', ',')
            } else {
                fila[6] = "00,00";////,
            }

            //TOTAL ING. POR PEDIDO SIN PROMO
            bgTotalIngreso_porPedido_sinPromo = VentaFacade.getInstance().getTotalVentasEntrega_SinPromo(caja.getFechaInicio(), caja.getFechaFin(), caja.getSucursal());
            //System.out.println("TOTAL SIN PROMO "+ bgTotalIngreso_porPedido_sinPromo);
            if (bgTotalIngreso_porPedido_sinPromo != null) {
                bgTotalIngreso_porPedido_sinPromo = bgTotalIngreso_porPedido_sinPromo.setScale(2, BigDecimal.ROUND_HALF_UP);
                fila[7] = formatoConComa.format(bgTotalIngreso_porPedido_sinPromo);//.toString().replace('.', ',')
            } else {
                fila[7] = "00,00";//,
            }

        //TOTAL ING. POR PEDIDO CON PROMO
     /*   bgTotalIngreso_porPedido_conPromo = VentaFacade.getInstance().getTotalVentasEntrega_ConPromo(caja.getFechaInicio(), caja.getFechaFin(), caja.getSucursal());
             //System.out.println("TOTAL SIN PROMO "+ bgTotalSinPromo);
             if (bgTotalIngreso_porPedido_conPromo != null) {
             fila[13] = bgTotalIngreso_porPedido_conPromo;
             } else {
             fila[13] = " ";
             } */
            //DIF. ING. POR PEDIDO POR PROMO
            //bgTotalIngreso_porPedido_conPromo
            if ((bgTotalIngreso_porPedido != null) && (bgTotalIngreso_porPedido_sinPromo != null)) { //
                bgDifIngreso_porPedio_Promo = bgTotalIngreso_porPedido_sinPromo.subtract(bgTotalIngreso_porPedido);
                if (bgDifIngreso_porPedio_Promo != null) {
                    bgDifIngreso_porPedio_Promo = bgDifIngreso_porPedio_Promo.setScale(2, BigDecimal.ROUND_HALF_UP);
                    fila[8] = formatoConComa.format(bgDifIngreso_porPedio_Promo);//.toString().replace('.', ',')
                } else {
                    fila[8] = "00,00";//,
                }
            } else {
                fila[8] = "00,00";//,
            }

            //TOTAL ING. EVENTUAL
            bgTotalIngreso_eventual = VentaFacade.getInstance().getTotalVentasNoEntrega(caja.getFechaInicio(), caja.getFechaFin(), caja.getSucursal());
            TotalDescuento_Ingreso_eventual = VentaFacade.getInstance().getTotalDescuentoVentasNoEntrega(caja.getFechaInicio(), caja.getFechaFin(), caja.getSucursal());
            try {
                bgTotalIngreso_eventual = bgTotalIngreso_eventual.subtract(TotalDescuento_Ingreso_eventual);
            } catch (Exception e) {

            }

            if (bgTotalIngreso_eventual != null) {
                bgTotalIngreso_eventual = bgTotalIngreso_eventual.setScale(2, BigDecimal.ROUND_HALF_UP);
                fila[9] = formatoConComa.format(bgTotalIngreso_eventual);//.toString().replace('.', ',')
            } else {
                fila[9] = "00,00";//,
            }

            //TOTAL ING. EVENTUAL SIN PROMO
            bgTotalIngreso_eventual_sinPromo = VentaFacade.getInstance().getTotalVentasNoEntrega_SinPromo(caja.getFechaInicio(), caja.getFechaFin(), caja.getSucursal());
            //System.out.println("EVENTUAL SIN PROMO "+ bgTotalIngreso_eventual_sinPromo);
            try {
                /* no se hace la resta por pedido de miguel - 10/2016 
                bgTotalIngreso_eventual_sinPromo = bgTotalIngreso_eventual_sinPromo.subtract(TotalDescuento_Ingreso_eventual);*/
            } catch (Exception e) {
            }
            if (bgTotalIngreso_eventual_sinPromo != null) {
                bgTotalIngreso_eventual_sinPromo = bgTotalIngreso_eventual_sinPromo.setScale(2, BigDecimal.ROUND_HALF_UP);
                fila[10] = formatoConComa.format(bgTotalIngreso_eventual_sinPromo);//.toString().replace('.', ',')
            } else {
                fila[10] = "00,00";//,
            }

        //TOTAL ING. EVENTUAL CON PROMO
 /*       bgTotalIngreso_eventual_conPromo = VentaFacade.getInstance().getTotalVentasEntrega_ConPromo(caja.getFechaInicio(), caja.getFechaFin(), caja.getSucursal());
             //System.out.println("TOTAL SIN PROMO "+ bgTotalSinPromo);
             if (bgTotalIngreso_eventual_conPromo != null) {
             fila[17] = bgTotalIngreso_eventual_conPromo;
             } else {
             fila[17] = "";
             }  */
            //DIF. ING. EVENTUAL POR PROMO
            if ((bgTotalIngreso_eventual != null) && (bgTotalIngreso_eventual_sinPromo != null)) { // 
                bgDifIngreso_eventual_Promo = bgTotalIngreso_eventual_sinPromo.subtract(bgTotalIngreso_eventual);
                //System.out.println("DIF. POR PROMO " + bgDifPromo);
                if (bgDifIngreso_eventual_Promo != null) {
                    bgDifIngreso_eventual_Promo = bgDifIngreso_eventual_Promo.setScale(2, BigDecimal.ROUND_HALF_UP);
                    fila[11] = formatoConComa.format(bgDifIngreso_eventual_Promo);//.toString().replace('.', ',')
                } else {
                    fila[11] = "00,00";//,
                }
            } else {
                fila[11] = "00,00";//,
            }

            //DIFERENCIA DE CAJA
            bgDifCaja = caja.getCajaFinal().subtract(CajaFacade.getInstance().getSaldoFinalCaja_Reporte(caja));
            if (bgDifCaja.compareTo(new BigDecimal("0.00")) != 0) {
                bgDifCaja = bgDifCaja.setScale(2, BigDecimal.ROUND_HALF_UP);
                fila[12] = formatoConComa.format(bgDifCaja);//.toString().replace('.', ',')
            } else {
                fila[12] = "00,00";//,
            }

            //INGRESO
            //** SI LA DIF. DE CAJA ES NEGATIVA, COMO LO TOMA EL ADD? O HAY QUE HACER SUSBTRACT???? **/
            //if ((bgTotalIngreso_porPedido != null) && (bgTotalIngreso_eventual != null)) {
            if (bgTotalIngreso_porPedido == null) {
                bgTotalIngreso_porPedido = new BigDecimal("0.00");
            }
            if (bgTotalIngreso_eventual == null) {
                bgTotalIngreso_eventual = new BigDecimal("0.00");
            }
            bgIngreso = bgTotalIngreso_eventual.add(bgTotalIngreso_porPedido).add(bgDifCaja);
            if (bgIngreso.compareTo(new BigDecimal("0.00")) != 0) {
                bgIngreso = bgIngreso.setScale(2, BigDecimal.ROUND_HALF_UP);
                fila[13] = formatoConComa.format(bgIngreso);//.toString().replace('.', ',')
            } else {
                fila[13] = "00,00";//,
            }
            /*} else {
             fila[13] = " ";
             }  */

            //TOTAL SIN PROMO
            //    bgTotalSinPromo = VentaFacade.getInstance().getTotalVentasSinPromo(caja.getFechaInicio(), caja.getFechaFin(), caja.getSucursal());
            //if ((bgTotalIngreso_porPedido_sinPromo != null) && (bgTotalIngreso_eventual_sinPromo != null)) {   }   
            if (bgTotalIngreso_porPedido_sinPromo == null) {
                bgTotalIngreso_porPedido_sinPromo = new BigDecimal("0.00");
            }
            if (bgTotalIngreso_eventual_sinPromo == null) {
                bgTotalIngreso_eventual_sinPromo = new BigDecimal("0.00");
            }
            bgTotalSinPromo_2 = bgTotalIngreso_porPedido_sinPromo.add(bgTotalIngreso_eventual_sinPromo);
            if (bgTotalSinPromo_2 != null) {
                bgTotalSinPromo_2 = bgTotalSinPromo_2.setScale(2, BigDecimal.ROUND_HALF_UP);
                fila[14] = formatoConComa.format(bgTotalSinPromo_2);//.toString().replace('.', ',')
            } else {
                fila[14] = "00,00";//,
            }

            //TOTAL CON PROMO
            bgTotalConPromo = VentaFacade.getInstance().getTotalVentasConPromo(caja.getFechaInicio(), caja.getFechaFin(), caja.getSucursal());
            //System.out.println("TOTAL CON PROMO "+ bgTotalConPromo);
/*        if(bgTotalConPromo != null) {
             fila[9] = bgTotalConPromo;
             }else {
             fila[9] = " ";
             } */
            try {
               bgTotalConPromo = bgTotalConPromo.subtract(TotalDescuento_Ingreso_eventual);
            } catch (Exception e) {
            }
            //DIF. POR PROMO
            //if ((bgTotalConPromo != null) && (bgTotalSinPromo_2 != null)) {
            if (bgTotalSinPromo_2 == null) {
                bgTotalSinPromo_2 = new BigDecimal("0.00");
            }
            if (bgTotalConPromo == null) {
                bgTotalConPromo = new BigDecimal("0.00");
            }
            bgDifPromo = bgTotalSinPromo_2.subtract(bgTotalConPromo);
            //System.out.println("DIF. POR PROMO " + bgDifPromo);
            if (bgDifPromo != null) {
                bgDifPromo = bgDifPromo.setScale(2, BigDecimal.ROUND_HALF_UP);
                fila[15] = formatoConComa.format(bgDifPromo);//.toString().replace('.', ',')
            } else {
                fila[15] = "00,00";//,
            }
            /* } else {
             fila[15] = " ";
             }*/

            modeloTablaCaja.addRow(fila);

        }//fin cargarCaja

        @Override
        public void run() {
            int progreso = 0;
            this.botonUno.setEnabled(Boolean.FALSE);
            this.botonDos.setEnabled(Boolean.FALSE);
            jProgressBar1.setStringPainted(true);
            for (Caja caja : this.lstCaja) {
                progreso++;
                jProgressBar1.setValue(progreso);
                jProgressBar1.updateUI();
                System.out.println("Caja for: " + caja.getId());

                cargarCaja(caja);
            }//fin for

            this.botonUno.setEnabled(Boolean.TRUE);
            this.botonDos.setEnabled(Boolean.TRUE);
            System.out.println("Termino");
        }

    }//*fin cargarCajas

}
