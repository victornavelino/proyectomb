/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.ventas;

import entidades.Sucursal;
import entidades.cliente.Organismo;
import entidades.cliente.Persona;
import entidades.venta.Venta;
import entidades.venta.VentaArticulo;
import facade.VentaFacade;
import includes.Comunes;
import includes.ExportarExcel;
import includes.ModeloTablaNoEditable;
import java.awt.Color;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author franco
 */
public class DiagListadoVentas extends javax.swing.JDialog {

    private ModeloTablaNoEditable modeloTablaVentas;
    private Vector headers = new Vector();
    private Vector data = new Vector();
    private Sucursal sucursal;

    /**
     * Creates new form DiagListadoVentas
     */
    public DiagListadoVentas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inicializarComponentes();

    }

    public DiagListadoVentas(java.awt.Frame parent, boolean modal, Sucursal sucursal) {
        super(parent, modal);
        initComponents();
        this.sucursal = sucursal;
        inicializarComponentes();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVentas = new javax.swing.JTable();
        btnExportarArt = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dpFechaDesde = new org.jdesktop.swingx.JXDatePicker();
        dpFechaHasta = new org.jdesktop.swingx.JXDatePicker();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblVentas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnExportarArt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/new_page.png"))); // NOI18N
        btnExportarArt.setText(org.openide.util.NbBundle.getMessage(DiagListadoVentas.class, "DiagListadoVentas.btnExportarArt.text")); // NOI18N
        btnExportarArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarArtActionPerformed(evt);
            }
        });

        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/back.png"))); // NOI18N
        btnCerrar.setText(org.openide.util.NbBundle.getMessage(DiagListadoVentas.class, "DiagListadoVentas.btnCerrar.text")); // NOI18N
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        jLabel1.setText(org.openide.util.NbBundle.getMessage(DiagListadoVentas.class, "DiagListadoVentas.jLabel1.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(DiagListadoVentas.class, "DiagListadoVentas.jLabel2.text")); // NOI18N

        jButton1.setText(org.openide.util.NbBundle.getMessage(DiagListadoVentas.class, "DiagListadoVentas.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(314, 314, 314)
                        .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(btnExportarArt, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(229, 229, 229)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dpFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dpFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(269, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(dpFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dpFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExportarArt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCerrar)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExportarArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarArtActionPerformed
        Exportar();
    }//GEN-LAST:event_btnExportarArtActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        filtrarVentas();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiagListadoVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiagListadoVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiagListadoVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiagListadoVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiagListadoVentas dialog = new DiagListadoVentas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnExportarArt;
    private org.jdesktop.swingx.JXDatePicker dpFechaDesde;
    private org.jdesktop.swingx.JXDatePicker dpFechaHasta;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblVentas;
    // End of variables declaration//GEN-END:variables

    private void Exportar() {
        new ExportarExcel().crearExcelJtable(tblVentas, "Listado de Ventas");
    }

    private void cargarTablaVentas(List<Venta> ventas) {
        modeloTablaVentas = new ModeloTablaNoEditable();
        cargarEncabezadosTablaArticulos(modeloTablaVentas);
        configurarTabla(tblVentas);
        try {
            cargarVentas(ventas);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Error: " + ex);
        }
    }

    private void cargarEncabezadosTablaArticulos(ModeloTablaNoEditable modeloTablaArticulos) {
        modeloTablaArticulos.addColumn("Id");
        modeloTablaArticulos.addColumn("Sucursal");
        modeloTablaArticulos.addColumn("Fecha");
        modeloTablaArticulos.addColumn("Numero Ticket");
        modeloTablaArticulos.addColumn("Nombre/Razon Social");
        modeloTablaArticulos.addColumn("DNI/CUIT");
        modeloTablaArticulos.addColumn("Monto");
        modeloTablaArticulos.addColumn("Descuento");
        modeloTablaArticulos.addColumn("Anulada");
        modeloTablaArticulos.addColumn("Usuario");
        modeloTablaArticulos.addColumn("Articulo");
        modeloTablaArticulos.addColumn("Cantidad");
        modeloTablaArticulos.addColumn("Total Item");
        modeloTablaArticulos.addColumn("Precio Promocion");
        modeloTablaArticulos.addColumn("Precio Lista");

        tblVentas.setModel(modeloTablaVentas);
    }

    private void configurarTabla(JTable tbl) {
        JViewport scroll = (JViewport) tbl.getParent();
        int ancho = scroll.getWidth();
        int anchoColumna = 0;
        TableColumnModel modeloColumna = tbl.getColumnModel();
        TableColumn columnaTabla;
        for (int i = 0; i < tbl.getColumnCount(); i++) {
            columnaTabla = modeloColumna.getColumn(i);
            switch (i) {
                case 0:
                    anchoColumna = (1 * ancho) / 100;
                    break;
                case 1:
                    anchoColumna = (20 * ancho) / 100;
                    break;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                    anchoColumna = (5 * ancho) / 100;
                    break;
            }
            columnaTabla.setPreferredWidth(anchoColumna);
            tbl.setColumnModel(modeloColumna);
        }
        tbl.getTableHeader().setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
        tbl.getTableHeader().setBackground(java.awt.Color.WHITE);
        tbl.getTableHeader().setForeground(Color.BLACK);
        //Si le queremos cambiar el tamaño a la tablita
        tbl.setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
    }

    private void cargarVentas(List<Venta> ventas) {
        try {
            modeloTablaVentas = new ModeloTablaNoEditable();
            cargarEncabezadosTablaArticulos(modeloTablaVentas);
            for (Venta venta : ventas) {
                if (sucursal.getNombre().equals("CENTRAL")) {
                    //SI ES CENTRAL CARGAR VENTAS 
                    cargarVenta(venta);
                } else {
                    for (VentaArticulo ventaArticulo : venta.getVentasArticulos()) {
                        cargarVenta(venta, ventaArticulo);
                    }
                }

            }

            tblVentas.setModel(modeloTablaVentas);
            // Comunes.setOcultarColumnasJTable(tblVentas, 0);
        } catch (Exception ex) {
            Logger.getLogger(DiagExportarImportarVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarVenta(Venta venta, VentaArticulo ventaArticulo) {
        // JOptionPane.showMessageDialog(null, "va "+va.getCantidadPeso());
        SimpleDateFormat formats = new SimpleDateFormat("dd/MM/yyyy  HH:mm:ss");
        DecimalFormatSymbols simboloSeparador = new DecimalFormatSymbols(Locale.ENGLISH);
        simboloSeparador.setDecimalSeparator(',');
        DecimalFormat formatoConComa = new DecimalFormat("#####.###", simboloSeparador);
        Object[] fila = new Object[15];
        int n = 0;
        fila[n++] = venta.getId();
        fila[n++] = venta.getSucursal();
        if (venta.getFecha() != null) {
            fila[n++] = formats.format(venta.getFecha());
        }
        fila[n++] = venta.getNumeroTicket();

        fila[n++] = venta.getCliente();
        fila[n++] = venta.getDniCliente();

        fila[n++] = formatoConComa.format(venta.getMonto());
        fila[n++] = formatoConComa.format(venta.getDescuento());
        if (venta.isAnulado()) {
            fila[n++] = "Si";
        } else {
            fila[n++] = "No";
        }
        fila[n++] = venta.getUsuario().getNombreCompleto();
        fila[n++] = ventaArticulo.getArticuloDescripcion();
        fila[n++] = formatoConComa.format(ventaArticulo.getCantidadPeso());
        fila[n++] = formatoConComa.format(ventaArticulo.getPrecio());
        fila[n++] = formatoConComa.format(ventaArticulo.getPrecioPromocion());
        fila[n++] = formatoConComa.format(ventaArticulo.getPrecioUnitario());

        modeloTablaVentas.addRow(fila);
    }

    private void cargarVenta(Venta venta) {
        // JOptionPane.showMessageDialog(null, "va "+va.getCantidadPeso());
        SimpleDateFormat formats = new SimpleDateFormat("dd/MM/yyyy  HH:mm:ss");
        DecimalFormatSymbols simboloSeparador = new DecimalFormatSymbols(Locale.ENGLISH);
        simboloSeparador.setDecimalSeparator(',');
        DecimalFormat formatoConComa = new DecimalFormat("#####.###", simboloSeparador);
        Object[] fila = new Object[10];
        int n = 0;
        fila[n++] = venta.getId();
        fila[n++] = venta.getSucursal();
        if (venta.getFecha() != null) {
            fila[n++] = formats.format(venta.getFecha());
        }
        fila[n++] = venta.getNumeroTicket();

        fila[n++] = venta.getCliente();
        fila[n++] = venta.getDniCliente();

        fila[n++] = formatoConComa.format(venta.getMonto());
        fila[n++] = formatoConComa.format(venta.getDescuento());
        if (venta.isAnulado()) {
            fila[n++] = "Si";
        } else {
            fila[n++] = "No";
        }
        fila[n++] = venta.getUsuario().getNombreCompleto();

        modeloTablaVentas.addRow(fila);
    }

    private void inicializarComponentes() {
        //cargarTablaVentas(VentaFacade.getInstance().listaVentasOrdXNroTicket());
        Comunes.formatearJXdatePicker(dpFechaDesde);
        Comunes.formatearJXdatePicker(dpFechaHasta);
    }

    private void filtrarVentas() {
        cargarTablaVentas(VentaFacade.getInstance().listaVentasOrdXTicketXFechas(dpFechaDesde.getDate(), dpFechaHasta.getDate()));
    }
}
