/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.ventas;

import entidades.cliente.Cliente;
import entidades.cliente.Organismo;
import entidades.cliente.Persona;
import facade.ClienteFacade;
import includes.Comunes;
import includes.ModeloTablaNoEditable;
import includes.SuperDialog;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JViewport;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import vista.articulos.*;

/**
 *
 * @author franco
 */
public class DiagBuscarCliente extends SuperDialog { 

    private ModeloTablaNoEditable modeloTablaPersonas;
    private ModeloTablaNoEditable modeloTablaOrganismos;
    private Cliente Cliente;

    public Cliente getCliente() {
        return Cliente;
    }

    public void setCliente(Cliente Cliente) {
        this.Cliente = Cliente;
    }

    /**
     * Creates new form DiagBuscarArticulo
     */
    public DiagBuscarCliente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        tfPersona = new javax.swing.JTextField();
        jbBuscarPersona = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPersonas = new javax.swing.JTable();
        btnSeleccionarPersona = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnSeleccionarOrganismo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrganismo = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        tfOrganismo = new javax.swing.JTextField();
        jbBuscarOrganismo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jLabel5.setText(org.openide.util.NbBundle.getMessage(DiagBuscarCliente.class, "DiagBuscarCliente.jLabel5.text")); // NOI18N

        jbBuscarPersona.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar2.png"))); // NOI18N
        jbBuscarPersona.setText(org.openide.util.NbBundle.getMessage(DiagBuscarCliente.class, "DiagBuscarCliente.jbBuscarPersona.text")); // NOI18N
        jbBuscarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarPersonaActionPerformed(evt);
            }
        });

        tblPersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Descripcion", "Domicilio"
            }
        ));
        tblPersonas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPersonasMouseClicked(evt);
            }
        });
        tblPersonas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblPersonasKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblPersonas);
        if (tblPersonas.getColumnModel().getColumnCount() > 0) {
            tblPersonas.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(DiagBuscarCliente.class, "DiagBuscarCliente.tblPersonas.columnModel.title0")); // NOI18N
            tblPersonas.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(DiagBuscarCliente.class, "DiagBuscarCliente.tblPersonas.columnModel.title1")); // NOI18N
            tblPersonas.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(DiagBuscarCliente.class, "DiagBuscarCliente.tblPersonas.columnModel.title2")); // NOI18N
            tblPersonas.getColumnModel().getColumn(3).setHeaderValue(org.openide.util.NbBundle.getMessage(DiagBuscarCliente.class, "DiagBuscarCliente.tblPersonas.columnModel.title3")); // NOI18N
        }

        btnSeleccionarPersona.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/accept.png"))); // NOI18N
        btnSeleccionarPersona.setText(org.openide.util.NbBundle.getMessage(DiagBuscarCliente.class, "DiagBuscarCliente.btnSeleccionarPersona.text")); // NOI18N
        btnSeleccionarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarPersonaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbBuscarPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)))
                .addGap(28, 28, 28))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(btnSeleccionarPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(jbBuscarPersona, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSeleccionarPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(DiagBuscarCliente.class, "DiagBuscarCliente.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        btnSeleccionarOrganismo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/accept.png"))); // NOI18N
        btnSeleccionarOrganismo.setText(org.openide.util.NbBundle.getMessage(DiagBuscarCliente.class, "DiagBuscarCliente.btnSeleccionarOrganismo.text")); // NOI18N
        btnSeleccionarOrganismo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarOrganismoActionPerformed(evt);
            }
        });

        tblOrganismo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Descripcion", "Domicilio"
            }
        ));
        tblOrganismo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOrganismoMouseClicked(evt);
            }
        });
        tblOrganismo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblOrganismoKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblOrganismo);
        if (tblOrganismo.getColumnModel().getColumnCount() > 0) {
            tblOrganismo.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(DiagBuscarCliente.class, "DiagBuscarCliente.tblPersonas.columnModel.title0")); // NOI18N
            tblOrganismo.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(DiagBuscarCliente.class, "DiagBuscarCliente.tblPersonas.columnModel.title1")); // NOI18N
            tblOrganismo.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(DiagBuscarCliente.class, "DiagBuscarCliente.tblPersonas.columnModel.title2")); // NOI18N
            tblOrganismo.getColumnModel().getColumn(3).setHeaderValue(org.openide.util.NbBundle.getMessage(DiagBuscarCliente.class, "DiagBuscarCliente.tblPersonas.columnModel.title3")); // NOI18N
        }

        jLabel6.setText(org.openide.util.NbBundle.getMessage(DiagBuscarCliente.class, "DiagBuscarCliente.jLabel6.text")); // NOI18N

        jbBuscarOrganismo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar2.png"))); // NOI18N
        jbBuscarOrganismo.setText(org.openide.util.NbBundle.getMessage(DiagBuscarCliente.class, "DiagBuscarCliente.jbBuscarOrganismo.text")); // NOI18N
        jbBuscarOrganismo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarOrganismoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfOrganismo, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbBuscarOrganismo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(btnSeleccionarOrganismo, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfOrganismo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jbBuscarOrganismo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSeleccionarOrganismo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(DiagBuscarCliente.class, "DiagBuscarCliente.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarPersonaActionPerformed
        buscarPersona();

    }//GEN-LAST:event_jbBuscarPersonaActionPerformed

    private void btnSeleccionarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarPersonaActionPerformed
        seleccionarPersona();
    }//GEN-LAST:event_btnSeleccionarPersonaActionPerformed

    private void btnSeleccionarOrganismoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarOrganismoActionPerformed
        seleccionarOrganismo();
    }//GEN-LAST:event_btnSeleccionarOrganismoActionPerformed

    private void jbBuscarOrganismoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarOrganismoActionPerformed
        buscarOrganismo();
    }//GEN-LAST:event_jbBuscarOrganismoActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        modeloTablaOrganismos = new ModeloTablaNoEditable();
        cargarEncabezadosTablaOrganismos(modeloTablaOrganismos);
        modeloTablaPersonas = new ModeloTablaNoEditable();
        cargarEncabezadosTablaPersonas(modeloTablaPersonas);
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void tblPersonasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblPersonasKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            seleccionarPersona();
        }
    }//GEN-LAST:event_tblPersonasKeyPressed

    private void tblOrganismoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblOrganismoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            seleccionarOrganismo();
        }
    }//GEN-LAST:event_tblOrganismoKeyPressed

    private void tblOrganismoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOrganismoMouseClicked
        if (evt.getClickCount() == 2) {
            seleccionarOrganismo();
        }

    }//GEN-LAST:event_tblOrganismoMouseClicked

    private void tblPersonasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPersonasMouseClicked
        if (evt.getClickCount() == 2) {
            seleccionarPersona();
        }

    }//GEN-LAST:event_tblPersonasMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiagBuscarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiagBuscarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiagBuscarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiagBuscarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiagBuscarCliente dialog = new DiagBuscarCliente(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSeleccionarOrganismo;
    private javax.swing.JButton btnSeleccionarPersona;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbBuscarOrganismo;
    private javax.swing.JButton jbBuscarPersona;
    private javax.swing.JTable tblOrganismo;
    private javax.swing.JTable tblPersonas;
    private javax.swing.JTextField tfOrganismo;
    private javax.swing.JTextField tfPersona;
    // End of variables declaration//GEN-END:variables
private void cargarEncabezadosTablaPersonas(ModeloTablaNoEditable modeloTablaPersonas) {
        modeloTablaPersonas.addColumn("Id");
        modeloTablaPersonas.addColumn("Nombre");
        modeloTablaPersonas.addColumn("Documento");
        modeloTablaPersonas.addColumn("Domicilio");

        tblPersonas.setModel(modeloTablaPersonas);
        Comunes.setOcultarColumnasJTable(tblPersonas, 0);
    }

    private void cargarEncabezadosTablaOrganismos(ModeloTablaNoEditable modeloTablaOrganismos) {
        modeloTablaOrganismos.addColumn("Id");
        modeloTablaOrganismos.addColumn("Nombre");
        modeloTablaOrganismos.addColumn("CUIT");
        modeloTablaOrganismos.addColumn("Domicilio");

        tblOrganismo.setModel(modeloTablaOrganismos);
    }

    private void configurarTabla(JTable tbl) {
        JViewport scroll = (JViewport) tbl.getParent();
        int ancho = scroll.getWidth();
        int anchoColumna = 0;
        TableColumnModel modeloColumna = tbl.getColumnModel();
        TableColumn columnaTabla;
        for (int i = 0; i < tbl.getColumnCount(); i++) {
            columnaTabla = modeloColumna.getColumn(i);
            switch (i) {
                case 0:
                    anchoColumna = (1 * ancho) / 100;
                    break;
                case 1:
                    anchoColumna = (20 * ancho) / 100;
                    break;
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:
                    anchoColumna = (5 * ancho) / 100;
                    break;
            }
            columnaTabla.setPreferredWidth(anchoColumna);
            tbl.setColumnModel(modeloColumna);
        }
        tbl.getTableHeader().setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
        tbl.getTableHeader().setBackground(java.awt.Color.WHITE);
        tbl.getTableHeader().setForeground(Color.BLACK);
        //Si le queremos cambiar el tamaño a la tablita
        tbl.setFont(new java.awt.Font("Dialog",
                java.awt.Font.PLAIN, 10));
    }

    private void cargarTablaPersonas(List<Persona> personas) {
        modeloTablaPersonas = new ModeloTablaNoEditable();
        cargarEncabezadosTablaPersonas(modeloTablaPersonas);
        configurarTabla(tblPersonas);
        try {
            cargarPersonas(personas);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Error: " + ex);
        }
    }

    private void cargarTablaOrganismos(List<Organismo> organismos) {
        modeloTablaOrganismos = new ModeloTablaNoEditable();
        cargarEncabezadosTablaOrganismos(modeloTablaOrganismos);
        configurarTabla(tblOrganismo);
        try {
            cargarOrganismos(organismos);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Error: " + ex);
        }
    }

    private void cargarPersonas(List<Persona> personas) {
        try {
            modeloTablaPersonas = new ModeloTablaNoEditable();
            cargarEncabezadosTablaPersonas(modeloTablaPersonas);
            for (Persona persona : personas) {
                cargarPersona(persona);
            }

            tblPersonas.setModel(modeloTablaPersonas);
        } catch (Exception ex) {
            Logger.getLogger(DiagAdminArticulos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarOrganismos(List<Organismo> organismos) {
        try {
            modeloTablaOrganismos = new ModeloTablaNoEditable();
            cargarEncabezadosTablaOrganismos(modeloTablaOrganismos);
            for (Organismo organismo : organismos) {
                cargarOrganismo(organismo);
            }

            tblOrganismo.setModel(modeloTablaOrganismos);
        } catch (Exception ex) {
            Logger.getLogger(DiagBuscarCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarPersona(Persona persona) {

        Object[] fila = new Object[4];
        fila[0] = persona.getId();
        fila[1] = persona.toString();
        try {
            fila[2] = persona.getDocumentoIdentidad();
        } catch (Exception e) {

        }

        try {
            fila[3] = persona.getDomicilio();
        } catch (Exception e) {
            fila[3] = "";
        }
        modeloTablaPersonas.addRow(fila);
    }

    private void cargarOrganismo(Organismo organismo) {

        Object[] fila = new Object[4];
        fila[0] = organismo.getId();
        fila[1] = organismo.toString();
        try {
            fila[2] = organismo.getCUIT();
        } catch (Exception e) {

        }

        try {
            fila[3] = organismo.getDomicilio();
        } catch (Exception e) {
            fila[3] = "";
        }
        modeloTablaOrganismos.addRow(fila);
    }

    private void seleccionarPersona() {
        if (tblPersonas.getSelectedRow() != -1) {
            this.setCliente(ClienteFacade.getInstance().getPersonasXId((Long) tblPersonas.getValueAt(tblPersonas.getSelectedRow(), 0)));
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una Persona");
        }
    }

    private void inicializarComponentes() {
//        eventosDeTeclas();
        tfPersona.requestFocus();
        cargarTablaPersonas(ClienteFacade.getInstance().getPersonas());
        cargarTablaOrganismos(ClienteFacade.getInstance().getOrganismos());

    }

    private void buscarOrganismo() {
        if (!tfOrganismo.getText().isEmpty()) {

            cargarTablaOrganismos(ClienteFacade.getInstance().buscarOrganismos(tfOrganismo.getText()));
        } else {
            cargarTablaOrganismos(ClienteFacade.getInstance().getOrganismos());
        }
                //para tomar el foco en la primera fila
        if (modeloTablaOrganismos.getRowCount() > 0) {
            tblOrganismo.requestFocus();
            tblOrganismo.changeSelection(0, 0, false, false);
        }
    }

    private void buscarPersona() {
        if (!tfPersona.getText().isEmpty()) {
            cargarTablaPersonas(ClienteFacade.getInstance().buscarPersonas(tfPersona.getText()));
        } else {
            cargarTablaPersonas(ClienteFacade.getInstance().getPersonas());
        }
        //para tomar el foco en la primera fila
        if (modeloTablaPersonas.getRowCount() > 0) {
            tblPersonas.requestFocus();
            tblPersonas.changeSelection(0, 0, false, false);
        }
    }

    private void seleccionarOrganismo() {
        if (tblOrganismo.getSelectedRow() != -1) {
            this.setCliente(ClienteFacade.getInstance().buscar((Long) tblOrganismo.getValueAt(tblOrganismo.getSelectedRow(), 0)));
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un organismo");
        }
    }


}
