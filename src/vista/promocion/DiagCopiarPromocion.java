/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.promocion;

import entidades.Sucursal;
import entidades.articulo.ListaPrecio;
import entidades.promocion.Promocion;
import facade.ListaPrecioFacade;
import facade.PromocionFacade;
import facade.SucursalFacade;
import includes.Comunes;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author franco
 */
public class DiagCopiarPromocion extends javax.swing.JDialog {

    /**
     * Creates new form CopiarPromocion
     */
    public DiagCopiarPromocion(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboSucursalOrigen = new javax.swing.JComboBox();
        cboPromociones = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        chkTodasPromos = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cboSucursalDestino = new javax.swing.JComboBox();
        chkTodasSucursalesDestino = new javax.swing.JCheckBox();
        btnCopiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiagCopiarPromocion.class, "DiagCopiarPromocion.jPanel1.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(DiagCopiarPromocion.class, "DiagCopiarPromocion.jLabel1.text")); // NOI18N

        cboSucursalOrigen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboSucursalOrigen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboSucursalOrigenItemStateChanged(evt);
            }
        });

        jLabel2.setText(org.openide.util.NbBundle.getMessage(DiagCopiarPromocion.class, "DiagCopiarPromocion.jLabel2.text")); // NOI18N

        chkTodasPromos.setText(org.openide.util.NbBundle.getMessage(DiagCopiarPromocion.class, "DiagCopiarPromocion.chkTodasPromos.text")); // NOI18N
        chkTodasPromos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkTodasPromosItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cboPromociones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(chkTodasPromos))
                    .addComponent(cboSucursalOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboSucursalOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboPromociones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(chkTodasPromos))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiagCopiarPromocion.class, "DiagCopiarPromocion.jPanel2.border.title"))); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(DiagCopiarPromocion.class, "DiagCopiarPromocion.jLabel3.text")); // NOI18N

        chkTodasSucursalesDestino.setText(org.openide.util.NbBundle.getMessage(DiagCopiarPromocion.class, "DiagCopiarPromocion.chkTodasSucursalesDestino.text")); // NOI18N
        chkTodasSucursalesDestino.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkTodasSucursalesDestinoSucursalesItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cboSucursalDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(chkTodasSucursalesDestino)
                .addGap(51, 51, 51))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboSucursalDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chkTodasSucursalesDestino))
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnCopiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save.png"))); // NOI18N
        btnCopiar.setText(org.openide.util.NbBundle.getMessage(DiagCopiarPromocion.class, "DiagCopiarPromocion.btnCopiar.text")); // NOI18N
        btnCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(btnCopiar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCopiar)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboSucursalOrigenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboSucursalOrigenItemStateChanged
        elegirSucursal();
    }//GEN-LAST:event_cboSucursalOrigenItemStateChanged

    private void chkTodasSucursalesDestinoSucursalesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkTodasSucursalesDestinoSucursalesItemStateChanged
        cambiarEstado();
    }//GEN-LAST:event_chkTodasSucursalesDestinoSucursalesItemStateChanged

    private void btnCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiarActionPerformed
        copiar();
    }//GEN-LAST:event_btnCopiarActionPerformed

    private void chkTodasPromosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkTodasPromosItemStateChanged
        cambiarEstadoPromo();
    }//GEN-LAST:event_chkTodasPromosItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiagCopiarPromocion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiagCopiarPromocion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiagCopiarPromocion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiagCopiarPromocion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiagCopiarPromocion dialog = new DiagCopiarPromocion(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCopiar;
    private javax.swing.JComboBox cboPromociones;
    private javax.swing.JComboBox cboSucursalDestino;
    private javax.swing.JComboBox cboSucursalOrigen;
    private javax.swing.JCheckBox chkTodasPromos;
    private javax.swing.JCheckBox chkTodasSucursalesDestino;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
private void inicializarComponentes() {
        Comunes.cargarJComboConBlanco(cboSucursalOrigen, SucursalFacade.getInstance().getTodos());
    }

    private void elegirSucursal() {

        if (cboSucursalOrigen.getSelectedIndex() > 0) {
            Sucursal s = (Sucursal) cboSucursalOrigen.getSelectedItem();
            List<Sucursal> sucursales = SucursalFacade.getInstance().getTodos();
            sucursales.remove(s);
            Comunes.cargarJComboConBlanco(cboSucursalDestino, sucursales);
            Comunes.cargarJComboConBlanco(cboPromociones, PromocionFacade.getInstance().buscarPorSucursal(s));
        }
    }

    private void cambiarEstado() {
        cboSucursalDestino.setEnabled(!chkTodasSucursalesDestino.isSelected());
    }

    private void copiar() {
        int reply = JOptionPane.showConfirmDialog(null,
                "¿Desea guardar los cambios?", "Actualizar Promociones",
                JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            if (cboSucursalOrigen.getSelectedIndex() > 0) {
                if (cboPromociones.getSelectedIndex() > 0 || chkTodasPromos.isSelected()) {
                    //UNA PROMO A TODAS LAS SUCURSALES DESTINOS
                    if (chkTodasSucursalesDestino.isSelected() && !chkTodasPromos.isSelected()) {
                        Sucursal origen = (Sucursal) cboSucursalOrigen.getSelectedItem();
                        Promocion promocion = (Promocion) cboPromociones.getSelectedItem();
                        PromocionFacade.getInstance().copiarPromocion(origen, promocion);
                        JOptionPane.showMessageDialog(rootPane, "Promoción copiada correctamente");
                        this.dispose();
                     //UNA PROMO A UNA SUCURSAL DESTINO    
                    } else if (cboSucursalDestino.getSelectedIndex() > 0 && !chkTodasPromos.isSelected()) {
                        Sucursal origen = (Sucursal) cboSucursalOrigen.getSelectedItem();
                        Promocion promocion = (Promocion) cboPromociones.getSelectedItem();
                        Sucursal destino = (Sucursal) cboSucursalDestino.getSelectedItem();
                        PromocionFacade.getInstance().copiarPromocion(origen, destino, promocion);
                        JOptionPane.showMessageDialog(rootPane, "Promoción copiada correctamente");
                        this.dispose();
                     // TODAS LAS PROMOS A TODAS LAS SUCURSALES DESTINOS
                    } else if (chkTodasPromos.isSelected() && chkTodasSucursalesDestino.isSelected()) {
                        Sucursal origen = (Sucursal) cboSucursalOrigen.getSelectedItem();
                        List<Promocion> promociones = PromocionFacade.getInstance().buscarPorSucursal(origen);
                        PromocionFacade.getInstance().copiarTodasPromocionesATodasSucursales(origen, promociones);
                        JOptionPane.showMessageDialog(rootPane, "Promociones copiada correctamente");
                        this.dispose();
                    //TODAS LAS PROMOS UNA SUCURSAL DESTINO
                    } else if (chkTodasPromos.isSelected() && cboSucursalDestino.getSelectedIndex() > 0) {
                        Sucursal origen = (Sucursal) cboSucursalOrigen.getSelectedItem();
                        Sucursal destino = (Sucursal) cboSucursalDestino.getSelectedItem();
                        List<Promocion> promociones = PromocionFacade.getInstance().buscarPorSucursal(origen);
                        PromocionFacade.getInstance().copiarTodasPromocionesAUnaSucursal(origen, destino, promociones);
                        JOptionPane.showMessageDialog(rootPane, "Promociones copiada correctamente");
                        this.dispose();

                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una sucursal a donde copiar");

                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una promoción a copiar");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una sucursal de donde copiar");
            }

        } else {
            JOptionPane.showMessageDialog(null, "No se han guardado los cambios");
            this.dispose();
        }
    }

    private void cambiarEstadoPromo() {
        cboPromociones.setEnabled(!chkTodasPromos.isSelected());
    }
}
