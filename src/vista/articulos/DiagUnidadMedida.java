/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.articulos;

import vista.categorias.*;
import entidades.articulo.Categoria;
import entidades.articulo.SubCategoria;
import entidades.articulo.UnidadMedida;
import facade.CategoriaFacade;
import facade.SubCategoriaFacade;
import facade.UnidadMedidaFacade;
import includes.Comunes;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author vouilloz
 */
public class DiagUnidadMedida extends javax.swing.JDialog {

    private String tipoOperacion;
    private SubCategoria subCategoria;
    private UnidadMedida unidadMedida;

    /**
     * Creates new form DiagSubCategoria
     */
    public DiagUnidadMedida(java.awt.Frame parent, boolean modal, String tipoOperacion) {
        super(parent, modal);
        initComponents();
        this.tipoOperacion = tipoOperacion;
        inicializarComponentes();
    }

    private DiagUnidadMedida(JFrame jFrame, boolean b) {
        //super(parent, modal);
        initComponents();
        inicializarComponentes();
    }

    public SubCategoria getSubCategoria() {
        return subCategoria;
    }

    public void setSubCategoria(SubCategoria subCategoria) {
        this.subCategoria = subCategoria;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnLista = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlUnidadMedida = new javax.swing.JList();
        btnSeleccionar = new javax.swing.JButton();
        pnSubCategoria = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfDescripcion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnAgregarSubCategoria = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        tfMedida = new javax.swing.JTextField();
        cboEsPeso = new javax.swing.JComboBox();
        btnCancelar = new javax.swing.JButton();
        btnEliminarUnidadMed = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnLista.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiagUnidadMedida.class, "DiagUnidadMedida.pnLista.border.title"))); // NOI18N

        jlUnidadMedida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlUnidadMedidaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jlUnidadMedida);

        javax.swing.GroupLayout pnListaLayout = new javax.swing.GroupLayout(pnLista);
        pnLista.setLayout(pnListaLayout);
        pnListaLayout.setHorizontalGroup(
            pnListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnListaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnListaLayout.setVerticalGroup(
            pnListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnListaLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnSeleccionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/edit.png"))); // NOI18N
        btnSeleccionar.setText(org.openide.util.NbBundle.getMessage(DiagUnidadMedida.class, "DiagUnidadMedida.btnSeleccionar.text")); // NOI18N
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        pnSubCategoria.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiagUnidadMedida.class, "DiagUnidadMedida.pnSubCategoria.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(DiagUnidadMedida.class, "DiagUnidadMedida.jLabel1.text")); // NOI18N

        tfDescripcion.setText(org.openide.util.NbBundle.getMessage(DiagUnidadMedida.class, "DiagUnidadMedida.tfDescripcion.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(DiagUnidadMedida.class, "DiagUnidadMedida.jLabel2.text")); // NOI18N

        btnAgregarSubCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save.png"))); // NOI18N
        btnAgregarSubCategoria.setText(org.openide.util.NbBundle.getMessage(DiagUnidadMedida.class, "DiagUnidadMedida.btnAgregarSubCategoria.text")); // NOI18N
        btnAgregarSubCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarSubCategoriaActionPerformed(evt);
            }
        });

        jLabel3.setText(org.openide.util.NbBundle.getMessage(DiagUnidadMedida.class, "DiagUnidadMedida.jLabel3.text")); // NOI18N

        tfMedida.setText(org.openide.util.NbBundle.getMessage(DiagUnidadMedida.class, "DiagUnidadMedida.tfMedida.text")); // NOI18N

        cboEsPeso.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Seleccione--", "SI", "NO" }));

        javax.swing.GroupLayout pnSubCategoriaLayout = new javax.swing.GroupLayout(pnSubCategoria);
        pnSubCategoria.setLayout(pnSubCategoriaLayout);
        pnSubCategoriaLayout.setHorizontalGroup(
            pnSubCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSubCategoriaLayout.createSequentialGroup()
                .addGroup(pnSubCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnSubCategoriaLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(pnSubCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(pnSubCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnSubCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfMedida, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cboEsPeso, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(pnSubCategoriaLayout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addComponent(btnAgregarSubCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        pnSubCategoriaLayout.setVerticalGroup(
            pnSubCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnSubCategoriaLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnSubCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnSubCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboEsPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnSubCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfMedida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(btnAgregarSubCategoria)
                .addGap(18, 18, 18))
        );

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/back.png"))); // NOI18N
        btnCancelar.setText(org.openide.util.NbBundle.getMessage(DiagUnidadMedida.class, "DiagUnidadMedida.btnCancelar.text")); // NOI18N
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnEliminarUnidadMed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/delete.png"))); // NOI18N
        btnEliminarUnidadMed.setText(org.openide.util.NbBundle.getMessage(DiagUnidadMedida.class, "DiagUnidadMedida.btnEliminarUnidadMed.text")); // NOI18N
        btnEliminarUnidadMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUnidadMedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnSubCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(btnSeleccionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminarUnidadMed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnSubCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnSeleccionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarUnidadMed)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAgregarSubCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarSubCategoriaActionPerformed
        altaUnidadMedida();
        agregarUnidadMedida();
    }//GEN-LAST:event_btnAgregarSubCategoriaActionPerformed

    private void jlUnidadMedidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlUnidadMedidaMouseClicked
        recogerUnidadMedidaSelec();
    }//GEN-LAST:event_jlUnidadMedidaMouseClicked

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        modificarUnidadMedida();
        Comunes.cargarJList(jlUnidadMedida, UnidadMedidaFacade.getInstance().getTodos());
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void btnEliminarUnidadMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUnidadMedActionPerformed
        eliminarUnidadMedida();
    }//GEN-LAST:event_btnEliminarUnidadMedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiagUnidadMedida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiagUnidadMedida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiagUnidadMedida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiagUnidadMedida.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiagUnidadMedida dialog = new DiagUnidadMedida(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarSubCategoria;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminarUnidadMed;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JComboBox cboEsPeso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList jlUnidadMedida;
    private javax.swing.JPanel pnLista;
    private javax.swing.JPanel pnSubCategoria;
    private javax.swing.JTextField tfDescripcion;
    private javax.swing.JTextField tfMedida;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
        agregarUnidadMedida();
    }

    private void altaUnidadMedida() {
        if (validarUnidadMedida()) {
            try {
                unidadMedida = new UnidadMedida();
                unidadMedida.setDescripcion(tfDescripcion.getText());
                if (cboEsPeso.getSelectedIndex() == 1) {
                    unidadMedida.setEsPeso(true);
                } else if (cboEsPeso.getSelectedIndex() == 2) {
                    unidadMedida.setEsPeso(false);
                }
                unidadMedida.setMedida(tfMedida.getText());
                UnidadMedidaFacade.getInstance().alta(unidadMedida);
                limpiarCampos();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }

    private boolean validarUnidadMedida() {
        if (tfDescripcion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar la Descripcion de la unidad de medida", "Mensaje", JOptionPane.ERROR_MESSAGE);
            tfDescripcion.requestFocus();
            return false;
        }
        if (cboEsPeso.getSelectedIndex() < 1) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el tipo de unidad de medida", "Mensaje", JOptionPane.ERROR_MESSAGE);
            cboEsPeso.requestFocus();
            return false;
        }
        if (tfMedida.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar la medida", "Mensaje", JOptionPane.ERROR_MESSAGE);
            tfMedida.requestFocus();
            return false;
        }
        return true;
    }

    private void agregarUnidadMedida() {
        Comunes.cargarJList(jlUnidadMedida, UnidadMedidaFacade.getInstance().getTodos());
    }

    private void recogerUnidadMedidaSelec() {
        unidadMedida = (UnidadMedida) jlUnidadMedida.getSelectedValue();
        try {
            tfDescripcion.setText(unidadMedida.getDescripcion());
        } catch (Exception e) {

        }

        if (unidadMedida.isEsPeso()) {
            cboEsPeso.setSelectedIndex(1);
        } else {
            cboEsPeso.setSelectedIndex(2);
        }
        try {
            tfMedida.setText(unidadMedida.getMedida());
        } catch (Exception e) {

        }

    }

    private void modificarUnidadMedida() {
        if (jlUnidadMedida.getSelectedIndex() != -1) {
            if (validarUnidadMedida()) {
                try {

                    unidadMedida.setDescripcion(tfDescripcion.getText());
                    if (cboEsPeso.getSelectedIndex() == 1) {
                        unidadMedida.setEsPeso(true);
                    } else if (cboEsPeso.getSelectedIndex() == 2) {
                        unidadMedida.setEsPeso(false);
                    }
                    unidadMedida.setMedida(tfMedida.getText());
                    UnidadMedidaFacade.getInstance().modificar(unidadMedida);
                    limpiarCampos();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Para poder modificar una SubCategoria debe Seleccionar una de La Lista");
        }
    }

    private void limpiarCampos() {
        tfDescripcion.setText("");
        tfMedida.setText("");
        cboEsPeso.setSelectedIndex(0);
    }

    private void eliminarUnidadMedida() {
        if (jlUnidadMedida.getSelectedIndex() != -1) {
            int i = JOptionPane.showConfirmDialog(this, "¿Desea eliminar Unidad De Medida?", "Confirmar eliminacion", JOptionPane.YES_NO_OPTION);
            if (i == 0) {
                try {
                    UnidadMedidaFacade.getInstance().eliminar(((UnidadMedida) jlUnidadMedida.getSelectedValue()).getId());
                    JOptionPane.showMessageDialog(null, "Unidad de Medida eliminada");
                    Comunes.cargarJList(jlUnidadMedida, UnidadMedidaFacade.getInstance().getTodos());

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "No se puede eliminar, unidad de medida en uso!");
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "Debe seleccionar un elemento de la lista");

        }

    }
}
