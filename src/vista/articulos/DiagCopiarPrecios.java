/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.articulos;

import entidades.Sucursal;
import entidades.articulo.ListaPrecio;
import facade.ListaPrecioFacade;
import facade.SucursalFacade;
import includes.Comunes;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author franco
 */
public class DiagCopiarPrecios extends javax.swing.JDialog {

    /**
     * Creates new form DiagCopiarPrecios
     */
    public DiagCopiarPrecios(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        inicializarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboSucursalOrigen = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cboListas = new javax.swing.JComboBox();
        chkTodasListas = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cboSucursalDestino = new javax.swing.JComboBox();
        chkTodasSucursales = new javax.swing.JCheckBox();
        btnCopiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiagCopiarPrecios.class, "DiagCopiarPrecios.jPanel1.border.title"))); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(DiagCopiarPrecios.class, "DiagCopiarPrecios.jLabel1.text")); // NOI18N
        jPanel1.add(jLabel1);

        cboSucursalOrigen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboSucursalOrigen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboSucursalOrigenItemStateChanged(evt);
            }
        });
        jPanel1.add(cboSucursalOrigen);

        jLabel2.setText(org.openide.util.NbBundle.getMessage(DiagCopiarPrecios.class, "DiagCopiarPrecios.jLabel2.text")); // NOI18N
        jPanel1.add(jLabel2);

        jPanel1.add(cboListas);

        chkTodasListas.setText(org.openide.util.NbBundle.getMessage(DiagCopiarPrecios.class, "DiagCopiarPrecios.chkTodasListas.text")); // NOI18N
        chkTodasListas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkTodasListasItemStateChanged(evt);
            }
        });
        jPanel1.add(chkTodasListas);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(DiagCopiarPrecios.class, "DiagCopiarPrecios.jPanel2.border.title"))); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(DiagCopiarPrecios.class, "DiagCopiarPrecios.jLabel3.text")); // NOI18N

        chkTodasSucursales.setText(org.openide.util.NbBundle.getMessage(DiagCopiarPrecios.class, "DiagCopiarPrecios.chkTodasSucursales.text")); // NOI18N
        chkTodasSucursales.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkTodasSucursalesItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(6, 6, 6)
                .addComponent(cboSucursalDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkTodasSucursales)
                .addGap(113, 113, 113))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboSucursalDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkTodasSucursales)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        btnCopiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save.png"))); // NOI18N
        btnCopiar.setText(org.openide.util.NbBundle.getMessage(DiagCopiarPrecios.class, "DiagCopiarPrecios.btnCopiar.text")); // NOI18N
        btnCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addComponent(btnCopiar, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCopiar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboSucursalOrigenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboSucursalOrigenItemStateChanged
        elegirSucursal();
    }//GEN-LAST:event_cboSucursalOrigenItemStateChanged

    private void chkTodasSucursalesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkTodasSucursalesItemStateChanged
        cambiarEstado();
    }//GEN-LAST:event_chkTodasSucursalesItemStateChanged

    private void btnCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiarActionPerformed
        copiar();
    }//GEN-LAST:event_btnCopiarActionPerformed

    private void chkTodasListasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkTodasListasItemStateChanged
        cambiarEstadoPromo();
    }//GEN-LAST:event_chkTodasListasItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DiagCopiarPrecios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DiagCopiarPrecios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DiagCopiarPrecios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DiagCopiarPrecios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiagCopiarPrecios dialog = new DiagCopiarPrecios(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCopiar;
    private javax.swing.JComboBox cboListas;
    private javax.swing.JComboBox cboSucursalDestino;
    private javax.swing.JComboBox cboSucursalOrigen;
    private javax.swing.JCheckBox chkTodasListas;
    private javax.swing.JCheckBox chkTodasSucursales;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    private void inicializarComponentes() {
        Comunes.cargarJComboConBlanco(cboSucursalOrigen, SucursalFacade.getInstance().getTodos());
        Comunes.cargarJComboConBlanco(cboListas, ListaPrecioFacade.getInstance().getTodos());
    }

    private void elegirSucursal() {

        if (cboSucursalOrigen.getSelectedIndex() > 0) {
            Sucursal s = (Sucursal) cboSucursalOrigen.getSelectedItem();
            List<Sucursal> sucursales = SucursalFacade.getInstance().getTodos();
            sucursales.remove(s);
            Comunes.cargarJComboConBlanco(cboSucursalDestino, sucursales);
        }
    }

    private void cambiarEstado() {
        cboSucursalDestino.setEnabled(!chkTodasSucursales.isSelected());
    }

    private void copiar() {
        int reply = JOptionPane.showConfirmDialog(null,
                "¿Desea guardar los cambios?\n Recuerde que los precios "
                + "se actualizarán", "Actualizar Precios",
                JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            System.out.println("copiando precios!!!!!!!!!!!!");
            if (cboSucursalOrigen.getSelectedIndex() > 0) {

                if (cboSucursalOrigen.getSelectedIndex() > 0 || chkTodasListas.isSelected()) {
                    //UNA LISTA A TODAS LAS SUCURSALES
                    if (chkTodasSucursales.isSelected()&&cboListas.getSelectedIndex() > 0) {
                        Sucursal origen = (Sucursal) cboSucursalOrigen.getSelectedItem();
                        ListaPrecio lista = (ListaPrecio) cboListas.getSelectedItem();
                        ListaPrecioFacade.getInstance().copiarLista(origen, lista);
                        JOptionPane.showMessageDialog(rootPane, "Precios copiados correctamente");
                        this.dispose();
                        //UNA LISTA A UNA SUCURSAL
                    } else if (cboSucursalDestino.getSelectedIndex() > 0 && !chkTodasListas.isSelected()) {
                        Sucursal origen = (Sucursal) cboSucursalOrigen.getSelectedItem();
                        ListaPrecio lista = (ListaPrecio) cboListas.getSelectedItem();
                        Sucursal destino = (Sucursal) cboSucursalDestino.getSelectedItem();
                        ListaPrecioFacade.getInstance().copiarLista(origen, destino, lista);
                        JOptionPane.showMessageDialog(rootPane, "Precios copiados correctamente");
                        this.dispose();
                        // TODAS LAS LISTAs A TODAS LAS SUCURSALES DESTINOS
                    } else if (chkTodasListas.isSelected() && chkTodasSucursales.isSelected()) {
                        Sucursal origen = (Sucursal) cboSucursalOrigen.getSelectedItem();
                        ListaPrecioFacade.getInstance().copiarTodasListasATodasSucursales(origen);
                        JOptionPane.showMessageDialog(rootPane, "Precios copiados correctamente");
                        this.dispose();
                        //TODAS LAS LISTAS UNA SUCURSAL DESTINO
                    } else if (chkTodasListas.isSelected() && cboSucursalDestino.getSelectedIndex() > 0) {
                        System.out.println("ENTRO TODAS LAS LISTAS A UNA SUC DESTINO");
                        Sucursal origen = (Sucursal) cboSucursalOrigen.getSelectedItem();
                        Sucursal destino = (Sucursal) cboSucursalDestino.getSelectedItem();
                        ListaPrecioFacade.getInstance().copiarTodasListasAUnaSucursal(origen, destino);
                        JOptionPane.showMessageDialog(rootPane, "Precios copiados correctamente");
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una sucursal a donde copiar");

                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una lista de precios de donde copiar");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una sucursal de donde copiar");
            }

        } else {
            JOptionPane.showMessageDialog(null, "No se han guardado los cambios");
            this.dispose();
        }
    }

    private void cambiarEstadoPromo() {
        cboListas.setEnabled(!chkTodasListas.isSelected());
    }
}
